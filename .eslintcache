[{"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\index.js":"1","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\reportWebVitals.js":"2","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\App.js":"3","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\store.js":"4","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\routes.js":"5","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\TransactionDetail.js":"6","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\DetailCustomer.js":"7","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\home\\HomeMaster.js":"8","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportList.js":"9","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportDetail.js":"10","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonUse.js":"11","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\loginAction.js":"12","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonForm.js":"13","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\listTransactionByStaff\\ListTransactionByStaff.js":"14","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js":"15","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\index.js":"16","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\index.js":"17","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\Error\\index.js":"18","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\index.js":"19","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\index.js":"20","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\customerForm\\index.js":"21","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\index.js":"22","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\index.js":"23","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Footer.js":"24","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\approvalAction.js":"25","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\customerAction.js":"26","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\transactionAction.js":"27","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Header.js":"28","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Menu.js":"29","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\signupAction.js":"30","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonRow.js":"31","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"32","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\needAction.js":"33","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\Containers\\Container.js":"34","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\reportAction.js":"35","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportRow.js":"36","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\DropdownList\\DropdownList.js":"37","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\home\\card\\CardboxMaster.js":"38","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\listTransactionByStaff\\Row.js":"39","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\constants\\actions.js":"40","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\Home.js":"41","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\sidebar\\SideNavBar.js":"42","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\navbar\\NavbarMaster.js":"43","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\transactionReducer.js":"44","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\reportReducer.js":"45","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\customerReducer.js":"46","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\needReducer.js":"47","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\customerSaga.js":"48","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\transactionSaga.js":"49","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\signupSaga.js":"50","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\reportSaga.js":"51","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\signupReducer.js":"52","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\approvalReducer.js":"53","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\loginSaga.js":"54","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\approvalSaga.js":"55","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\needSaga.js":"56","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\loginReducer.js":"57","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\Error\\Error.js":"58","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"59","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionList.js":"60","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\customerForm\\CustomerForm.js":"61","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\Containers\\index.js":"62","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\ListCustomer.js":"63","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Home.js":"64","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\api.js":"65","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\RowCustomer.js":"66","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\SignIn.js":"67","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\SignUp.js":"68","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\AccountList.js":"69","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\EditAccount.js":"70","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\roleReducer.js":"71","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\userReducer.js":"72","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\roleSaga.js":"73","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\userSaga.js":"74","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\profile\\EditProfile.js":"75","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\role\\RoleMenu.js":"76","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\profile\\EditPassword.js":"77","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\role\\RoleList.js":"78","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\reportByStaff\\ListReportByStaff.js":"79","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\pagination.js":"80","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\RowList.js":"81","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\roleAction.js":"82","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\AccountRow.js":"83","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\Buttons\\index.js":"84","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\role\\RoleRow.js":"85","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\reportByStaff\\Row.js":"86","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\userAction.js":"87","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\Buttons\\Buttons.js":"88"},{"size":569,"mtime":1617179377098,"results":"89","hashOfConfig":"90"},{"size":375,"mtime":1617179377122,"results":"91","hashOfConfig":"90"},{"size":891,"mtime":1617179796821,"results":"92","hashOfConfig":"90"},{"size":349,"mtime":1617179377097,"results":"93","hashOfConfig":"90"},{"size":4309,"mtime":1617179796847,"results":"94","hashOfConfig":"90"},{"size":18566,"mtime":1617188729835,"results":"95","hashOfConfig":"90"},{"size":8552,"mtime":1617189829856,"results":"96","hashOfConfig":"90"},{"size":2478,"mtime":1617179377109,"results":"97","hashOfConfig":"90"},{"size":9293,"mtime":1617187589123,"results":"98","hashOfConfig":"90"},{"size":12395,"mtime":1617179796893,"results":"99","hashOfConfig":"90"},{"size":7248,"mtime":1617179796893,"results":"100","hashOfConfig":"90"},{"size":194,"mtime":1617179377054,"results":"101","hashOfConfig":"90"},{"size":8140,"mtime":1617179796890,"results":"102","hashOfConfig":"90"},{"size":7972,"mtime":1617187030409,"results":"103","hashOfConfig":"90"},{"size":7953,"mtime":1617189590338,"results":"104","hashOfConfig":"90"},{"size":2280,"mtime":1617179796842,"results":"105","hashOfConfig":"90"},{"size":2171,"mtime":1617179796856,"results":"106","hashOfConfig":"90"},{"size":33,"mtime":1617179377100,"results":"107","hashOfConfig":"90"},{"size":41,"mtime":1617179377121,"results":"108","hashOfConfig":"90"},{"size":41,"mtime":1617179377122,"results":"109","hashOfConfig":"90"},{"size":38,"mtime":1617179377103,"results":"110","hashOfConfig":"90"},{"size":38,"mtime":1617179377106,"results":"111","hashOfConfig":"90"},{"size":1054,"mtime":1617179377072,"results":"112","hashOfConfig":"90"},{"size":286,"mtime":1617179377070,"results":"113","hashOfConfig":"90"},{"size":845,"mtime":1617179796822,"results":"114","hashOfConfig":"90"},{"size":720,"mtime":1617179796823,"results":"115","hashOfConfig":"90"},{"size":828,"mtime":1617179796826,"results":"116","hashOfConfig":"90"},{"size":4515,"mtime":1617188422963,"results":"117","hashOfConfig":"90"},{"size":6452,"mtime":1617179796838,"results":"118","hashOfConfig":"90"},{"size":744,"mtime":1617179796826,"results":"119","hashOfConfig":"90"},{"size":580,"mtime":1617179796891,"results":"120","hashOfConfig":"90"},{"size":1477,"mtime":1617179796907,"results":"121","hashOfConfig":"90"},{"size":890,"mtime":1617179796824,"results":"122","hashOfConfig":"90"},{"size":495,"mtime":1617179377069,"results":"123","hashOfConfig":"90"},{"size":276,"mtime":1617179796824,"results":"124","hashOfConfig":"90"},{"size":3064,"mtime":1617179796895,"results":"125","hashOfConfig":"90"},{"size":822,"mtime":1617179377069,"results":"126","hashOfConfig":"90"},{"size":2727,"mtime":1617179377110,"results":"127","hashOfConfig":"90"},{"size":1084,"mtime":1617179796904,"results":"128","hashOfConfig":"90"},{"size":7502,"mtime":1617179796840,"results":"129","hashOfConfig":"90"},{"size":2245,"mtime":1617179377100,"results":"130","hashOfConfig":"90"},{"size":3030,"mtime":1617179377083,"results":"131","hashOfConfig":"90"},{"size":3650,"mtime":1617179377072,"results":"132","hashOfConfig":"90"},{"size":5470,"mtime":1617179796845,"results":"133","hashOfConfig":"90"},{"size":2732,"mtime":1617179796843,"results":"134","hashOfConfig":"90"},{"size":4815,"mtime":1617179796841,"results":"135","hashOfConfig":"90"},{"size":4811,"mtime":1617179796842,"results":"136","hashOfConfig":"90"},{"size":3376,"mtime":1617179796854,"results":"137","hashOfConfig":"90"},{"size":4256,"mtime":1617179796859,"results":"138","hashOfConfig":"90"},{"size":3220,"mtime":1617179796858,"results":"139","hashOfConfig":"90"},{"size":2137,"mtime":1617179796857,"results":"140","hashOfConfig":"90"},{"size":3686,"mtime":1617179796844,"results":"141","hashOfConfig":"90"},{"size":4257,"mtime":1617179796841,"results":"142","hashOfConfig":"90"},{"size":802,"mtime":1617179377094,"results":"143","hashOfConfig":"90"},{"size":3553,"mtime":1617179796849,"results":"144","hashOfConfig":"90"},{"size":3818,"mtime":1617179796856,"results":"145","hashOfConfig":"90"},{"size":898,"mtime":1617179377088,"results":"146","hashOfConfig":"90"},{"size":1419,"mtime":1617179796860,"results":"147","hashOfConfig":"90"},{"size":23829,"mtime":1617179796906,"results":"148","hashOfConfig":"90"},{"size":8188,"mtime":1617179796907,"results":"149","hashOfConfig":"90"},{"size":24667,"mtime":1617190120420,"results":"150","hashOfConfig":"90"},{"size":35,"mtime":1617179377069,"results":"151","hashOfConfig":"90"},{"size":9561,"mtime":1617189727046,"results":"152","hashOfConfig":"90"},{"size":5808,"mtime":1617179796838,"results":"153","hashOfConfig":"90"},{"size":661,"mtime":1617179796839,"results":"154","hashOfConfig":"90"},{"size":1176,"mtime":1617179796884,"results":"155","hashOfConfig":"90"},{"size":8615,"mtime":1617179796865,"results":"156","hashOfConfig":"90"},{"size":23090,"mtime":1617179796867,"results":"157","hashOfConfig":"90"},{"size":5859,"mtime":1617179796861,"results":"158","hashOfConfig":"90"},{"size":15710,"mtime":1617179796863,"results":"159","hashOfConfig":"90"},{"size":4141,"mtime":1617179796843,"results":"160","hashOfConfig":"90"},{"size":1115,"mtime":1617179796845,"results":"161","hashOfConfig":"90"},{"size":3526,"mtime":1617179796858,"results":"162","hashOfConfig":"90"},{"size":903,"mtime":1617179796859,"results":"163","hashOfConfig":"90"},{"size":12245,"mtime":1617179796890,"results":"164","hashOfConfig":"90"},{"size":19438,"mtime":1617179796899,"results":"165","hashOfConfig":"90"},{"size":15314,"mtime":1617183618255,"results":"166","hashOfConfig":"90"},{"size":7237,"mtime":1617179796897,"results":"167","hashOfConfig":"90"},{"size":9197,"mtime":1617187589053,"results":"168","hashOfConfig":"90"},{"size":482,"mtime":1617179796857,"results":"169","hashOfConfig":"90"},{"size":1147,"mtime":1617179796888,"results":"170","hashOfConfig":"90"},{"size":757,"mtime":1617179796825,"results":"171","hashOfConfig":"90"},{"size":854,"mtime":1617179796862,"results":"172","hashOfConfig":"90"},{"size":42,"mtime":1617179377068,"results":"173","hashOfConfig":"90"},{"size":575,"mtime":1617179796900,"results":"174","hashOfConfig":"90"},{"size":2638,"mtime":1617179796896,"results":"175","hashOfConfig":"90"},{"size":347,"mtime":1617179796827,"results":"176","hashOfConfig":"90"},{"size":3724,"mtime":1617184871234,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"cmg9rs",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"180"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"180"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"180"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"180"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"180"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"180"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"180"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"180"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"180"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"180"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"180"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"180"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"180"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"180"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"180"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"180"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"180"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"180"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"180"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"180"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"180"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"352","usedDeprecatedRules":"180"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"180"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"180"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"180"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"180"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"180"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\index.js",[],["382","383"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\reportWebVitals.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\App.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\store.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\routes.js",["384","385","386"],"import React from \"react\";\r\nimport TransactionList from \"../pages/transaction/transactionList\";\r\nimport CustomerForm from \"../pages/customer/customerForm\";\r\nimport SignIn from \"../pages/account/SignIn\";\r\nimport SignUp from \"../pages/account/SignUp\";\r\nimport TransactionForm from \"../pages/transaction/transactionForm\";\r\nimport Dashboard from \"../components/dashboard\";\r\nimport ListCustomer from \"../pages/customer/listCustomer\";\r\nimport CustomerDetail from \"../pages/customer/DetailCustomer\";\r\nimport AccountList from \"../pages/account/AccountList\";\r\nimport TransactionDetail from \"../pages/transaction/TransactionDetail\";\r\nimport ReportList from \"../pages/report/ReportList\";\r\nimport ReasonUse from \"../pages/reasonUse/ReasonUse\";\r\nimport Error from \"../pages/Error\";\r\nimport ReasonForm from \"../pages/reasonUse/ReasonForm\";\r\nimport ListTransactionByStaff from \"../pages/transaction/listTransactionByStaff/ListTransactionByStaff\";\r\nimport ListReportByStaff from \"../pages/report/reportByStaff/ListReportByStaff\";\r\nimport EditAccount from \"../pages/account/EditAccount\";\r\nimport EditPassword from \"../pages/profile/EditPassword\";\r\nimport EditProfile from \"../pages/profile/EditProfile\";\r\nimport RoleMenu from \"../pages/role/RoleMenu\";\r\nimport RoleList from \"../pages/role/RoleList\";\r\nimport ListCustomerByStaff from \"../pages/customer/listCustomerByStaff/ListCustomerByStaff\";\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: <SignIn />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/master',\r\n        component: <AccountList/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/master/:id',\r\n        component: <SignUp/>,\r\n        exact: true\r\n\r\n    },\r\n    {\r\n        path: '/need',\r\n        component: <ReasonUse/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/need/form',\r\n        component: <ReasonForm/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/need/:id',\r\n        component: <ReasonForm/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/dashboard',\r\n        component: <Dashboard />,\r\n        exact: true\r\n    },\r\n    // {\r\n    //     path: '/customer/staff',\r\n    //     component: <ListCustomer />,\r\n    //     exact: true\r\n    // },\r\n    {\r\n        path: '/customer',\r\n        component: <ListCustomer />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/master/home',\r\n        component: <Dashboard />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/register',\r\n        component: <SignUp />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/customer/form',\r\n        component: <CustomerForm />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/customer/:id/edit',\r\n        component: <CustomerForm />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/transaction',\r\n        component: <TransactionList />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/transaction/form/:id',\r\n        component: <TransactionForm />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/customer/:id/detail',\r\n        component: <CustomerDetail />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/approval/:id',\r\n        component: <TransactionDetail />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/report',\r\n        component: <ReportList/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/error',\r\n        component: <Error/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/staff/customer',\r\n        component: <ListCustomerByStaff/>,\r\n        exact: true\r\n    },\r\n    {\r\n      path: '/staff/transaction',\r\n      component: <ListTransactionByStaff/>,\r\n      exact: true\r\n    },\r\n    {\r\n        path: '/report/staff',\r\n        component: <ListReportByStaff/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/password',\r\n        component: <EditPassword/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/users',\r\n        component: <EditProfile/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/edit/id',\r\n        component: <EditAccount/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/role/form',\r\n        component: <RoleMenu/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/role',\r\n        component: <RoleList/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/role/:id',\r\n        component: <RoleMenu/>,\r\n        exact: true\r\n    }\r\n\r\n];\r\n\r\nexport default routes\r\n","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\TransactionDetail.js",["387","388","389","390","391","392","393","394","395","396","397","398","399"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\DetailCustomer.js",["400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\home\\HomeMaster.js",["414","415","416"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportList.js",["417","418","419","420","421","422","423","424"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportDetail.js",["425","426","427","428","429"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonUse.js",["430","431","432","433","434","435","436","437","438","439","440"],"import React, {useEffect} from \"react\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {findAllNeedAction, removeByIdNeedAction} from \"../../actions/needAction\";\r\nimport {connect} from \"react-redux\";\r\nimport Containers from \"../../components/Containers/Container\";\r\nimport ReasonRow from \"./ReasonRow\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\nimport swal from \"sweetalert\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst ReasonUse = ({\r\n                       findAllNeedAction,\r\n                       needs,\r\n                       error,\r\n                       isLoading,\r\n                       removeByIdNeedAction,\r\n                       isRemoved\r\n\r\n                   }) => {\r\n\r\n    const onReload = () => {\r\n        findAllNeedAction(\r\n        );\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        swal({\r\n            title: \"Are you sure to delete this data?\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then(willDelete => {\r\n                if (willDelete) {\r\n                    removeByIdNeedAction(id);\r\n                    swal(\"Successful deleted\", {\r\n                        icon: \"success\"\r\n                    });\r\n                } else {\r\n                    swal(\"Failed to delete\")\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(onReload, [findAllNeedAction,\r\n        // pageParam, sizeParam\r\n    ])\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [findAllNeedAction])\r\n\r\n    useEffect(() => {\r\n        if (isRemoved) {\r\n            onReload()\r\n        }\r\n    }, [isRemoved])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Loan Purpose</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\r\n                                                            {/*</a>*/}\r\n                                                            <Link to=\"/need/form\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-plus-circle\"/>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n                                                            <thead style={{textAlign: \"left\"}}>\r\n                                                            <tr>\r\n                                                                <th>No</th>\r\n                                                                {/*<th>Id</th>*/}\r\n                                                                <th>Type</th>\r\n                                                                <th>Action</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n                                                            {\r\n                                                                !isLoading ?\r\n                                                                    needs?.list?.map((e, i) => {\r\n                                                                        return (\r\n                                                                            <ReasonRow onDeleted={() => onDelete(e.id)}\r\n                                                                                       key={i} data={e}\r\n                                                                                       number={(needs.page * needs.size) + 1 + i}/>\r\n                                                                        )\r\n                                                                    }) :\r\n                                                                    <tr>\r\n                                                                        <td colSpan=\"3\"> Loading..</td>\r\n                                                                    </tr>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n\r\n                        </Containers>\r\n                        <Footer/>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        needs: state.findAllNeedReducer.data,\r\n        error: state.findAllNeedReducer.error || state.removeNeedTypeByIdReducer.error,\r\n        isLoading: state.findAllNeedReducer.isLoading,\r\n        isRemoved: state.removeNeedTypeByIdReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllNeedAction,\r\n    removeByIdNeedAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonUse)","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\loginAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonForm.js",["441"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {Button, Form, FormGroup, Input, Label, Col} from \"reactstrap\";\r\nimport {findNeedByIdAction, saveNeedAction, updateNeedAction} from \"../../actions/needAction\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ReasonForm = ({saveNeedAction, saveNeedType, error, isLoading, needType, findNeedByIdAction, update, updateNeedAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [data, setData] = useState({})\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            findNeedByIdAction(id)\r\n        }\r\n    }, [id, findNeedByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id && needType) {\r\n            setData({...needType})\r\n        }\r\n    }, [needType])\r\n\r\n    useEffect(() => {\r\n        if (saveNeedType) {\r\n            swal(\"Add Loan Purpose Success\", \"\", \"success\")\r\n            history.push('/need')\r\n        }\r\n        if (error) {\r\n            swal(\"Sorry data already exist\", '', \"error\")\r\n        }\r\n        console.log(\"error\", error)\r\n    }, [saveNeedType, history, error])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n        console.log(\"handlechange\", data)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (id) {\r\n            updateNeedAction(id, data)\r\n        } else {\r\n            saveNeedAction(data)\r\n        }\r\n        swal(\"Save Success!\", \"\", \"success\");\r\n        console.log(\"handlesubmit\", data)\r\n        history.push('/need')\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/need\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Need Type</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                {!isLoading ?\r\n                                                                    <Form onSubmit={(e) => handleSubmit(e)}>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"type\" sm={3}\r\n                                                                                   style={{textAlign: \"left\"}}>Need\r\n                                                                                Type</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.type || ''}\r\n                                                                                    type=\"text\"\r\n                                                                                    name=\"type\"\r\n                                                                                    placeholder=\"input need type\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup check row>\r\n                                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                                    Submit\r\n                                                                                </Button> {' '}\r\n                                                                                <Button href=\"/need\"\r\n                                                                                        style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon\r\n                                                                                        icon={faArrowLeft}/>\r\n                                                                                    Cancel\r\n                                                                                </Button>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                    </Form> :\r\n                                                                    <div>Loading...</div>\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Footer/>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        saveNeedType: state.saveNeedReducer.data,\r\n        error: state.saveNeedReducer.error,\r\n        isLoading: state.saveNeedReducer.isLoading || state.findNeedTypeByIdReducer.isLoading,\r\n        needType: state.findNeedTypeByIdReducer.data,\r\n        update: state.updateNeedTypeReducer.data\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveNeedAction,\r\n    updateNeedAction,\r\n    findNeedByIdAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonForm)","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\listTransactionByStaff\\ListTransactionByStaff.js",["442","443","444","445","446","447","448","449"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js",["450","451","452","453","454","455","456","457","458"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\index.js",["459"],"import {combineReducers} from \"redux\";\r\nimport {\r\n  findAllCustomerBySubmitter,\r\n  findAllCustomerReducer,\r\n  findCustomerByIdReducer,\r\n  saveCustomerReducer,\r\n  updateCustomerReducer\r\n} from \"./customerReducer\";\r\nimport {\r\n  findAllTransactionByStaff, findAllTransactionReducer,\r\n  findTransactionByIdReducer,\r\n  saveTransactionReducer,\r\n  updateTransactionReducer\r\n} from \"./transactionReducer\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {\r\n  findAccountByIdReducer,\r\n  findAllAccountReducer,\r\n  removeAccountByIdReducer,\r\n  saveAccountReducer,\r\n  updateAccountReducer\r\n} from \"./signupReducer\";\r\nimport {findAllReportByStaff, findAllReportReducer} from \"./reportReducer\";\r\nimport {\r\n  saveApprovalReducer,\r\n  findAllApprovalReducer,\r\n  findApprovalByIdReducer,\r\n  findApprovalSubmitterByIdReducer\r\n} from \"./approvalReducer\";\r\nimport {\r\n  findAllNeedReducer,\r\n  findNeedTypeByIdReducer,\r\n  removeNeedTypeByIdReducer,\r\n  saveNeedReducer,\r\n  updateNeedTypeReducer\r\n} from \"./needReducer\";\r\nimport {\r\n  findAllRoleReducer,\r\n  findRoleByIdReducer,\r\n  removeRoleByIdReducer,\r\n  saveRoleReducer,\r\n    updateRoleReducer\r\n} from \"./roleReducer\";\r\nimport {changePasswordReducer} from \"./userReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  //CUSTOMER\r\n  findAllCustomerReducer,\r\n  saveCustomerReducer,\r\n  findCustomerByIdReducer,\r\n  updateCustomerReducer,\r\n\r\n  findAllCustomerBySubmitter,\r\n\r\n  //TRANSACTION\r\n  findAllTransactionReducer,\r\n  saveTransactionReducer,\r\n  findTransactionByIdReducer,\r\n  updateTransactionReducer,\r\n  findAllTransactionByStaff,\r\n\r\n  //LOGIN\r\n  loginReducer,\r\n\r\n  //SIGNUP\r\n  findAllAccountReducer,\r\n  saveAccountReducer,\r\n  findAccountByIdReducer,\r\n  updateAccountReducer,\r\n  removeAccountByIdReducer,\r\n\r\n  //REPORT\r\n  findAllReportReducer,\r\n  findAllReportByStaff,\r\n\r\n  //APPROVAL\r\n  saveApprovalReducer,\r\n  findAllApprovalReducer,\r\n  findApprovalByIdReducer,\r\n  findApprovalSubmitterByIdReducer,\r\n\r\n  //NEEDTYPE\r\n  findAllNeedReducer,\r\n  saveNeedReducer,\r\n  findNeedTypeByIdReducer,\r\n  updateNeedTypeReducer,\r\n  removeNeedTypeByIdReducer,\r\n\r\n  //ROLE\r\n  findAllRoleReducer,\r\n  saveRoleReducer,\r\n  removeRoleByIdReducer,\r\n  findRoleByIdReducer,\r\n  updateRoleReducer,\r\n\r\n  //USER\r\n  changePasswordReducer\r\n\r\n})\r\n\r\nexport default rootReducer","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\index.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\Error\\index.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\index.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\index.js",["460","461","462","463","464"],"import React from 'react'\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\nimport Content from \"./Home\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ListCustomer from \"../../pages/customer/listCustomer\";\r\nimport TransactionList from \"../../pages/transaction/transactionList\";\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Menu/>\r\n            {/*<ListCustomer/>*/}\r\n            <Content/>\r\n            {/*<Router>*/}\r\n            {/*    <Switch>*/}\r\n            {/*        <Route path=\"/customer\" component={ListCustomer} exact />*/}\r\n            {/*        /!*<Route path=\"/customer/form\" component={CustomerForm} exact />*!/*/}\r\n            {/*        <Route path=\"/transaction\" component={TransactionList} exact />*/}\r\n            {/*        <Route path=\"/report\" component={Content} exact/>*/}\r\n            {/*    </Switch>*/}\r\n            {/*</Router>*/}\r\n            <Footer/>\r\n        </div>\r\n\r\n    )\r\n}","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Footer.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\approvalAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\customerAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\transactionAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Header.js",["465","466","467","468","469","470","471"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Menu.js",["472","473","474","475","476","477","478","479"],"import React from \"react\";\r\nimport {faCheckDouble, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Menu() {\r\n  return (\r\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" style={{background:\"#e42256\"}}>\r\n        {/* Brand Logo */}\r\n        <a className=\"brand-link\">\r\n          {/*<img*/}\r\n          {/*  src=\"dist/img/AdminLTELogo.png\"*/}\r\n          {/*  alt=\"AdminLTE Logo\"*/}\r\n          {/*  className=\"brand-image img-circle elevation-3\"*/}\r\n          {/*  style={{ opacity: \".8\" }}*/}\r\n          {/*/>*/}\r\n          <span className=\"brand-text font-weight-light\">OK' 200</span>\r\n        </a>\r\n        {/* Sidebar */}\r\n        <div className=\"sidebar\">\r\n          {/* Sidebar user panel (optional) */}\r\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n            <div className=\"image\">\r\n              {/*<img*/}\r\n              {/*  src=\"dist/img/user2-160x160.jpg\"*/}\r\n              {/*  className=\"img-circle elevation-2\"*/}\r\n              {/*  alt=\"User Image\"*/}\r\n              {/*/>*/}\r\n            </div>\r\n            <div className=\"info\">\r\n              <a href=\"#\" className=\"d-block\">\r\n                {localStorage.getItem('fullName')}\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/* Sidebar Menu */}\r\n          <nav className=\"mt-2\">\r\n            {localStorage.getItem(\"master\") == \"true\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n                <li className=\"nav-item has-treeview\">\r\n                    <Link to=\"/role\" className=\"nav-link\">\r\n                        <i className=\"nav-icon fas fa-cog\"/>\r\n                        <p>\r\n                            Management Roles\r\n                        </p>\r\n                    </Link>\r\n                </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/master\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-users\"/>\r\n                  <p>\r\n                    Management User\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/need\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    Loan Purpose\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            }\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n                {localStorage.getItem('inputCustomer') == \"true\" &&\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/staff/customer\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    Customer\r\n                  </p>\r\n                </Link>\r\n              </li>}\r\n                {localStorage.getItem('readAllCustomer') == \"true\" &&\r\n                <li className=\"nav-item has-treeview\">\r\n                    <Link to=\"/customer\" className=\"nav-link\">\r\n                        <i className=\"nav-icon fas fa-list-alt\"/>\r\n                        <p>\r\n                            All Customer\r\n                        </p>\r\n                    </Link>\r\n                </li>}\r\n                {localStorage.getItem('readAllTransaction') == \"true\" &&\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </Link>\r\n              </li>}\r\n                {localStorage.getItem('inputTransaction') == \"true\" &&\r\n                <li className=\"nav-item has-treeview\">\r\n                    <Link to=\"/staff/transaction\" className=\"nav-link\">\r\n                        <i className=\"nav-icon fas fa-wallet\"/>\r\n                        <p>\r\n                            All Transaction\r\n                        </p>\r\n                    </Link>\r\n                </li>}\r\n                {localStorage.getItem('readAllReportByTransaction') == \"true\" &&\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/report/staff\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </Link>\r\n              </li>}\r\n                {localStorage.getItem('readAllReport') == \"true\" &&\r\n                <li className=\"nav-item has-treeview\">\r\n                    <Link to=\"/report/\" className=\"nav-link\">\r\n                        <i className=\"nav-icon fas fa-check-double\"/>\r\n                        <p>\r\n                            All Report\r\n                        </p>\r\n                    </Link>\r\n                </li>}\r\n            </ul>\r\n\r\n\r\n            {/*{localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&*/}\r\n            {/*<ul*/}\r\n            {/*    className=\"nav nav-pills nav-sidebar flex-column\"*/}\r\n            {/*    data-widget=\"treeview\"*/}\r\n            {/*    role=\"menu\"*/}\r\n            {/*    data-accordion=\"false\"*/}\r\n            {/*>*/}\r\n\r\n            {/*  <li className=\"nav-item has-treeview\">*/}\r\n            {/*    <Link to=\"/transaction\" className=\"nav-link\">*/}\r\n            {/*      <i className=\"nav-icon fas fa-wallet\"/>*/}\r\n            {/*      <p>*/}\r\n            {/*        Transaction*/}\r\n            {/*      </p>*/}\r\n            {/*    </Link>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li className=\"nav-item has-treeview\">*/}\r\n            {/*    <Link to=\"/report\" className=\"nav-link\">*/}\r\n            {/*      <i className=\"nav-icon fas fa-check-double\"/>*/}\r\n            {/*      <p>*/}\r\n            {/*        Report*/}\r\n            {/*      </p>*/}\r\n            {/*    </Link>*/}\r\n            {/*  </li>*/}\r\n            {/*</ul>*/}\r\n\r\n\r\n          </nav>\r\n          {/* /.sidebar-menu */}\r\n        </div>\r\n        {/* /.sidebar */}\r\n      </aside>\r\n  );\r\n}","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\signupAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonRow.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionRow.js",["480","481","482","483"],"import React from 'react'\r\nimport {Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheckCircle, faInfoCircle, faPencilAlt, faQuestionCircle, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst TransactionRow = ({data, onUpdate, number}) => {\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.transaction.customer.name}</td>\r\n            <td>{data.transaction.customer.employeeType} </td>\r\n            <td><NumberFormat value={data.transaction.loan}\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                              prefix={'Rp '}/></td>\r\n            <td>{data.transaction.tenor} month</td>\r\n            <td>{data.transaction.interestRate} %</td>\r\n            {/*{data.approve == true &&*/}\r\n            <td>\r\n                {/*<a href={`/transaction/${data.id}/detail`} className=\"text-muted\">*/}\r\n                {/*    <i className=\"fas fa-info-circle\" />*/}\r\n                {/*</a>{' '}*/}\r\n                {localStorage.getItem(\"approveTransaction\") == \"true\" &&\r\n                <Button href={`/approval/${data.id}`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faQuestionCircle}/>\r\n                </Button>}\r\n\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TransactionRow;\r\n\r\n","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\needAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\Containers\\Container.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\reportAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportRow.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\DropdownList\\DropdownList.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\home\\card\\CardboxMaster.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\listTransactionByStaff\\Row.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\constants\\actions.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\Home.js",["484","485"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\sidebar\\SideNavBar.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\navbar\\NavbarMaster.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\transactionReducer.js",["486","487","488"],"import {\r\n    FIND_ALL_TRANSACTION,\r\n    FIND_ALL_TRANSACTION_FAILURE,\r\n    FIND_ALL_TRANSACTION_SUCCESS,\r\n    FIND_TRANSACTION_BY_ID,\r\n    FIND_TRANSACTION_BY_ID_FAILURE,\r\n    FIND_TRANSACTION_BY_ID_SUCCESS,\r\n    FIND_TRANSACTION_BY_STAFF,\r\n    FIND_TRANSACTION_BY_STAFF_FAILURE,\r\n    FIND_TRANSACTION_BY_STAFF_SUCCESS,\r\n    SAVE_TRANSACTION,\r\n    SAVE_TRANSACTION_FAILURE,\r\n    SAVE_TRANSACTION_SUCCESS,\r\n    UPDATE_TRANSACTION,\r\n    UPDATE_TRANSACTION_FAILURE,\r\n    UPDATE_TRANSACTION_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\n\r\nconst initialState = {\r\n    data: null,\r\n    pagination: {\r\n        size: null,\r\n        total: null,\r\n        page: null\r\n    },\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const findAllTransactionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_ALL_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    size: null,\r\n                    total: null,\r\n                    page: null\r\n                },\r\n                isLoading: true\r\n            };\r\n        case FIND_ALL_TRANSACTION_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                pagination: {\r\n                    size: action.pagination.size,\r\n                    total: action.pagination.total,\r\n                    page: action.pagination.page\r\n                },\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_ALL_TRANSACTION_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const saveTransactionReducer = (state = {...initialState}, action) => {\r\n    switch (action.type) {\r\n        case SAVE_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            };\r\n        case SAVE_TRANSACTION_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case SAVE_TRANSACTION_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const findTransactionByIdReducer = (state = {initialState, data: false}, action) => {\r\n    switch (action.type) {\r\n        case FIND_TRANSACTION_BY_ID:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n\r\n            };\r\n        case FIND_TRANSACTION_BY_ID_SUCCESS:\r\n            console.log(\"ini reducer\", action.data)\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_TRANSACTION_BY_ID_FAILURE:\r\n            return {\r\n                data: false,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null,\r\n            };\r\n    }\r\n}\r\n\r\nexport const updateTransactionReducer = (state = {...initialState}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case UPDATE_TRANSACTION_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            }\r\n        case UPDATE_TRANSACTION_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const findAllTransactionByStaff = (state = initialState, action) => {\r\n    // console.log(\"ini action\", action)\r\n    switch (action.type) {\r\n        case FIND_TRANSACTION_BY_STAFF:\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    size: null,\r\n                    total: null,\r\n                    page: null\r\n                },\r\n                isLoading: true\r\n            };\r\n        case FIND_TRANSACTION_BY_STAFF_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                pagination: {\r\n                    size: action.pagination.size,\r\n                    total: action.pagination.total,\r\n                    page: action.pagination.page\r\n                },\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_TRANSACTION_BY_STAFF_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\reportReducer.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\customerReducer.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\needReducer.js",["489","490","491","492","493","494","495"],"import {\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS,\r\n    FIND_NEEDTYPE_BY_ID,\r\n    FIND_NEEDTYPE_BY_ID_FAILURE,\r\n    FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n    REMOVE_NEEDTYPE_BY_ID, REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS,\r\n    UPDATE_NEEDTYPE, UPDATE_NEEDTYPE_FAILURE,\r\n    UPDATE_NEEDTYPE_SUCCESS\r\n} from \"../constants/actions\";\r\nimport {act} from \"@testing-library/react\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    // pagination: {\r\n    //     size: null,\r\n    //     total: null,\r\n    //     page: null\r\n    // },\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const findAllNeedReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FIND_ALL_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                // pagination: {\r\n                //     size: null,\r\n                //     total: null,\r\n                //     page: null\r\n                // },\r\n                isLoading: true\r\n            };\r\n        case FIND_ALL_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                // pagination: {\r\n                //     size: action.pagination.size,\r\n                //     total: action.pagination.total,\r\n                //     page: action.pagination.page\r\n                // },\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_ALL_NEEDTYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n    console.log(\"ini action reducer\", action.pagination.size)\r\n}\r\n\r\nexport const saveNeedReducer = (state = {...initialState}, action) => {\r\n\r\n    switch (action.type) {\r\n        case SAVE_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case SAVE_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case SAVE_NEEDTYPE_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const findNeedTypeByIdReducer =(state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_NEEDTYPE_BY_ID:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            };\r\n        case FIND_NEEDTYPE_BY_ID_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_NEEDTYPE_BY_ID_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null,\r\n            };\r\n    }\r\n}\r\n\r\nexport const updateNeedTypeReducer = (state = {...initialState}, action) => {\r\n    switch (action.type){\r\n        case UPDATE_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case UPDATE_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case UPDATE_NEEDTYPE_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const removeNeedTypeByIdReducer = (state = {...initialState, data: false}, action) => {\r\n\r\n    switch (action.type) {\r\n        case REMOVE_NEEDTYPE_BY_ID:\r\n            return {\r\n                ...state,\r\n                data: false,\r\n                loading: true\r\n            }\r\n        case REMOVE_NEEDTYPE_BY_ID_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\customerSaga.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\transactionSaga.js",["496","497","498","499"],"\r\nimport {put, takeLatest} from \"redux-saga/effects\";\r\nimport axios from \"../api\";\r\nimport {\r\n    FIND_ALL_TRANSACTION,\r\n    FIND_ALL_TRANSACTION_FAILURE,\r\n    FIND_ALL_TRANSACTION_SUCCESS,\r\n    FIND_TRANSACTION_BY_ID,\r\n    FIND_TRANSACTION_BY_ID_FAILURE,\r\n    FIND_TRANSACTION_BY_ID_SUCCESS,\r\n    FIND_TRANSACTION_BY_STAFF_FAILURE,\r\n    FIND_TRANSACTION_BY_STAFF_SUCCESS,\r\n    SAVE_TRANSACTION,\r\n    SAVE_TRANSACTION_FAILURE,\r\n    SAVE_TRANSACTION_SUCCESS,\r\n    UPDATE_TRANSACTION_SUCCESS\r\n} from \"../constants/actions\";\r\nimport pagination from \"./pagination\";\r\n\r\nfunction* findAllTransactionSaga(data) {\r\n    let parameter = pagination(data)\r\n\r\n    // console.log(\"PARAMETER: \", action)\r\n\r\n    parameter = parameter.replace(/\\s+/g, '+')\r\n\r\n    let result = yield axios.get(`/approval/waiting?${parameter}`)\r\n        .then (data => {\r\n            return ({\r\n                type : FIND_ALL_TRANSACTION_SUCCESS,\r\n                data: data.list,\r\n                pagination: {\r\n                    size: data.size,\r\n                    total: data.total,\r\n                    page: data.page\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return({\r\n                type: FIND_ALL_TRANSACTION_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* saveTransactionSaga(action) {\r\n    let model = action.model\r\n    let method = 'POST', url = '/transaction';\r\n\r\n    let result = yield axios ({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_TRANSACTION_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_TRANSACTION_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findTransactionByIdSaga(action) {\r\n    let result = yield axios.get(`/approval/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini saga\", data)\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_ID_SUCCESS,\r\n                data: data\r\n\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put (result)\r\n}\r\n\r\nfunction* updateTransactionSaga(action) {\r\n    let result = yield axios.get(`/${action.id}/transaction}`)\r\n        .then(data => {\r\n            return({\r\n                type: UPDATE_TRANSACTION_SUCCESS,\r\n                data: result\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put({\r\n    })\r\n}\r\n\r\nfunction* findTransactionByStaffSaga(action) {\r\n    let parameter = pagination(action)\r\n\r\n    // console.log(\"PARAMETER: \", action)\r\n\r\n    parameter = parameter.replace(/\\s+/g, '+')\r\n    let result = yield axios.get(`/approval/principal?${parameter}`)\r\n        .then(data => {\r\n            // console.log(\"saga data\", data)\r\n\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_STAFF_SUCCESS,\r\n                data: data.list,\r\n                pagination: {\r\n                    size: data.size,\r\n                    total: data.total,\r\n                    page: data.page\r\n                },\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_STAFF_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nexport function* watchFindAllTransaction() {\r\n    yield takeLatest(FIND_ALL_TRANSACTION, findAllTransactionSaga)\r\n}\r\n\r\nexport function* watchSaveTransaction() {\r\n    yield takeLatest(SAVE_TRANSACTION, saveTransactionSaga)\r\n}\r\n\r\nexport function* watchFindTransactionById() {\r\n    yield takeLatest (FIND_TRANSACTION_BY_ID, findTransactionByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateTransactionById() {\r\n    yield takeLatest (UPDATE_TRANSACTION_SUCCESS, updateTransactionSaga)\r\n}\r\n\r\nexport function* watchFindAllTransactionByStaff() {\r\n    yield takeLatest (FIND_ALL_TRANSACTION, findTransactionByStaffSaga)\r\n}","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\signupSaga.js",["500"],"import axios from \"../api\";\r\nimport {\r\n    FIND_ACCOUNT_BY_ID,\r\n    FIND_ACCOUNT_BY_ID_FAILURE,\r\n    FIND_ACCOUNT_BY_ID_SUCCESS,\r\n    FIND_ALL_ACCOUNT,\r\n    FIND_ALL_ACCOUNT_FAILURE,\r\n    FIND_ALL_ACCOUNT_SUCCESS,\r\n    REMOVE_ACCOUNT_BY_ID,\r\n    REMOVE_ACCOUNT_BY_ID_FAILURE,\r\n    REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n    SAVE_ACCOUNT,\r\n    SAVE_ACCOUNT_FAILURE,\r\n    SAVE_ACCOUNT_SUCCESS, UPDATE_ACCOUNT, UPDATE_CUSTOMER\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\n\r\nfunction* findAllAccountSaga() {\r\n    let result = yield axios.get(\"/master\")\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveAccountSaga(action) {\r\n    let model = action.model;\r\n    let method = 'POST', url = '/master/signup';\r\n    if (model.id) {\r\n        method = \"PATCH\";\r\n        url = `/master/${model.id}`\r\n    }\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_ACCOUNT_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_ACCOUNT_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findAccountByIdSaga(action) {\r\n    console.log(\"SAGA ID\", action)\r\n    let result = yield axios.get(`/master/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"DATA\", data)\r\n            return ({\r\n                type: FIND_ACCOUNT_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_ACCOUNT_BY_ID_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* updateAccountSaga(action) {\r\n    let result = false\r\n\r\n    yield put({\r\n        type: UPDATE_ACCOUNT,\r\n        data: result\r\n    })\r\n}\r\n\r\nfunction* removeAccountById(action) {\r\n    let result = yield axios.delete(`/master/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini action\", data)\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nexport function* watchFindAllAccount() {\r\n    yield takeLatest(FIND_ALL_ACCOUNT, findAllAccountSaga)\r\n}\r\n\r\nexport function* watchSaveAccount() {\r\n    yield takeLatest(SAVE_ACCOUNT, saveAccountSaga)\r\n}\r\n\r\nexport function* watchFindByIdAccount() {\r\n    yield takeLatest(FIND_ACCOUNT_BY_ID, findAccountByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateAccountById() {\r\n    yield takeLatest(UPDATE_ACCOUNT, updateAccountSaga)\r\n}\r\n\r\nexport function* watchRemoveById() {\r\n    yield takeLatest(REMOVE_ACCOUNT_BY_ID, removeAccountById)\r\n}","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\reportSaga.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\signupReducer.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\approvalReducer.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\loginSaga.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\approvalSaga.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\needSaga.js",["501","502","503","504","505"],"import {\r\n    FIND_NEEDTYPE_BY_ID,\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS,\r\n    REMOVE_NEEDTYPE_BY_ID,\r\n    REMOVE_NEEDTYPE_BY_ID_FAILURE,\r\n    REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS,\r\n    UPDATE_NEEDTYPE,\r\n    FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n    FIND_NEEDTYPE_BY_ID_FAILURE, UPDATE_NEEDTYPE_SUCCESS\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\nimport pagination from \"./pagination\";\r\n\r\nfunction* findAllNeedSaga() {\r\n\r\n    let result = yield axios.get('/need')\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_NEEDTYPE_SUCCESS,\r\n                data: data,\r\n\r\n            })\r\n            console.log(\"saga ni\", data.size)\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_NEEDTYPE_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveNeedSaga(action) {\r\n    let model = action.model;\r\n    let method = 'POST', url = '/need';\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_NEEDTYPE_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_NEEDTYPE_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* findNeedByIdSaga(action) {\r\n    // console.log(\"SAGA ID\", action)\r\n    let result = yield axios.get(`/need/${action.id}`)\r\n        .then(data => {\r\n            // console.log(\"DATA\", data)\r\n            return ({\r\n                type: FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_NEEDTYPE_BY_ID_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n// function* updateNeedSaga(action) {\r\n//     let result = false\r\n//\r\n//     yield put({\r\n//         type: UPDATE_NEEDTYPE,\r\n//         data: result\r\n//     })\r\n// }\r\n\r\nfunction* updateNeedSaga(action) {\r\n    const url = `/need/${action.id}`\r\n    const method = 'PUT'\r\n    const model = action.payload\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return ({\r\n                type: UPDATE_NEEDTYPE_SUCCESS,\r\n                data: result\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_NEEDTYPE_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* removeNeedById(action) {\r\n    let result = yield axios.delete(`/need/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini action\", data)\r\n            return ({\r\n                type: REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: REMOVE_NEEDTYPE_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nexport function* watchFindAllNeed() {\r\n    yield takeLatest(FIND_ALL_NEEDTYPE, findAllNeedSaga)\r\n}\r\n\r\nexport function* watchSaveNeed() {\r\n    yield takeLatest(SAVE_NEEDTYPE, saveNeedSaga)\r\n}\r\n\r\nexport function* watchFindByIdNeed() {\r\n    yield takeLatest(FIND_NEEDTYPE_BY_ID, findNeedByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateNeedById() {\r\n    yield takeLatest(UPDATE_NEEDTYPE, updateNeedSaga)\r\n}\r\n\r\nexport function* watchRemoveNeedById() {\r\n    yield takeLatest(REMOVE_NEEDTYPE_BY_ID, removeNeedById)\r\n}","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\loginReducer.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\Error\\Error.js",["506","507"],"import React from 'react'\r\nimport undraw_page_not_found_su7k from \"../../assets/images/undraw_page_not_found_su7k.svg\";\r\nimport {FaFontAwesome} from \"react-icons/all\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faHome} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Button} from \"reactstrap\";\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <div>\r\n                        <img src={undraw_page_not_found_su7k} alt=\"\"\r\n                             className=\"img-fluid d-none d-md-block\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Page not found!</h1><br/>\r\n                    <h4 style={{color: \"#e42256\"}}>Sorry, you can not access this page!</h4><br/>\r\n                    <h4 style={{color: \"#e42256\"}}>Please, back to home!</h4><br/>\r\n                    <Button href=\"/dashboard\"\r\n                            style={{background: \"#e42256\"}}>\r\n                        <FontAwesomeIcon\r\n                            icon={faHome}/> Back\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["508","509","510","511","512","513","514","515","516","517","518","519","520"],"import {InputGroupText, InputGroup, FormGroup, Form, Input, Label, Button, Col, Spinner} from \"reactstrap\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {saveTransactionAction} from \"../../../actions/transactionAction\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {findCustomerByIdAction} from \"../../../actions/customerAction\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport NumberFormat from 'react-number-format';\r\nimport {findAllNeedAction} from \"../../../actions/needAction\";\r\nimport {findAllNeedReducer} from \"../../../configs/reducers/needReducer\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../../Error\";\r\n\r\nconst TransactionForm = ({savedTransaction, isLoading, error, saveTransactionAction, customer, findCustomerByIdAction, needs, findAllNeedAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({\r\n        customer: \"\"\r\n    })\r\n    const [currency, setCurrency] = useState({})\r\n    const [checkLoan, setCheckLoan] = useState({\r\n        maxLoan: 0,\r\n        loan: 0\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    const onReload = () => {\r\n        findAllNeedAction();\r\n    }\r\n\r\n    useEffect(onReload, [findAllNeedAction])\r\n\r\n    useEffect(() => {\r\n        findAllNeedAction()\r\n    }, [findAllNeedAction])\r\n\r\n    useEffect(() => {\r\n        if (id !== data.customer) {\r\n            findCustomerByIdAction(id);\r\n            setData({\r\n                ...data,\r\n                customer: id\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // console.log(CUSTOMER , customer, DATA , data)\r\n        console.log(data)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (savedTransaction) {\r\n\r\n            // if (localStorage.getItem(\"roles\") == \"MASTER\") {\r\n            //     swal(\"Success!\", \"Add transaction success!\", \"success\");\r\n            //     history.push('/transaction')\r\n            // } else if (localStorage.getItem(\"roles\") == \"STAFF\") {\r\n            //     swal(\"Success!\", \"Add transaction success!\", \"success\");\r\n            //     history.push('/approval/staff')\r\n            // } else {\r\n            //     swal(\"*Sorry you are not allowed to sign here\")\r\n            // }\r\n            history.push('/staff/transaction')\r\n            swal(\"Success!\", \"Add transaction success!\", \"success\")\r\n        }\r\n    }, [savedTransaction, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleCurrencyIncome = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setCheckLoan({...checkLoan, maxLoan: parseInt(value.split(\",\").join(\"\"))})\r\n\r\n        if (parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n    }\r\n    const handleCurrencyLoan = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setCheckLoan({...checkLoan, loan: parseInt(value.split(\",\").join(\"\"))})\r\n\r\n        if (parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n    }\r\n    console.log(\"INCOME\", checkLoan.maxLoan)\r\n    console.log(\"LOAN\", checkLoan.loan)\r\n    const handleCurrency = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        if (parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"EMPLOYEE\", customer?.employeeType)\r\n        if (customer?.employeeType == \"NON\"){\r\n            if (checkLoan.maxLoan / 2 > checkLoan.loan) {\r\n                saveTransactionAction(data)\r\n            } else {\r\n                swal(\"Sorry, Your loan is over\");\r\n            }\r\n        } else {\r\n            saveTransactionAction(data)\r\n        }\r\n    }\r\n    // console.log(\"DATA s\",data)\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to='/transaction'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"inputTransaction\") == \"true\" ?\r\n                    <>\r\n                        <Container error={error}/>\r\n                        <Header/>\r\n                        <Menu/>\r\n                        <div className=\"content-wrapper\">\r\n                            <div className=\"content-header\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row mb-2\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <h1 className=\"m-0 text-dark\">Form Transaction</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"content\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body table-responsive p-0\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form form-container\">\r\n                                                            {!isLoading ? needs &&\r\n                                                                <Form onSubmit={handleSubmit}>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"income\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Income\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <InputGroup>\r\n                                                                                <InputGroupText>Rp</InputGroupText>\r\n                                                                                {/*<Input >*/}\r\n                                                                                <NumberFormat\r\n                                                                                    required\r\n                                                                                    name=\"income\"\r\n                                                                                    min=\"0\"\r\n                                                                                    id=\"tanpa-rupiah\"\r\n                                                                                    onChange={handleCurrencyIncome}\r\n                                                                                    placeholder=\"input nominal\"\r\n                                                                                    thousandSeparator={true}/>\r\n                                                                                {/*</Input>*/}\r\n                                                                                <InputGroupText>.00</InputGroupText>\r\n                                                                            </InputGroup>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"outcome\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Outcome\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <InputGroup>\r\n                                                                                <InputGroupText>Rp</InputGroupText>\r\n                                                                                <NumberFormat\r\n                                                                                    required\r\n                                                                                    name=\"outcome\"\r\n                                                                                    min=\"0\"\r\n                                                                                    id=\"tanpa-rupiah\"\r\n                                                                                    onChange={handleCurrency}\r\n                                                                                    placeholder=\"input nominal\"\r\n                                                                                    thousandSeparator={true}/>\r\n                                                                                <InputGroupText>.00</InputGroupText>\r\n                                                                            </InputGroup>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"loan\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Loan Amount\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <InputGroup>\r\n                                                                                <InputGroupText>Rp</InputGroupText>\r\n                                                                                <NumberFormat\r\n                                                                                    style={{width:\"63vw\", height:\"calc(1.5em + .75rem + 2px)\",\r\n                                                                                        borderRadius:\"0.5vw\", outlineColor:\"#ced4da\"}}\r\n                                                                                    required\r\n                                                                                    name=\"loan\"\r\n                                                                                    min=\"0\"\r\n                                                                                    id=\"tanpa-rupiah\"\r\n                                                                                    onChange={handleCurrencyLoan}\r\n                                                                                    placeholder=\"input nominal\"\r\n                                                                                    thousandSeparator={true}/>\r\n                                                                                <InputGroupText>.00</InputGroupText>\r\n                                                                            </InputGroup>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label htmlFor=\"tenor\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Tenor\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                            <p style={{\r\n                                                                                fontSize: \"0.7vw\",\r\n                                                                                color: \"grey\"\r\n                                                                            }}>(max. 6 month)</p>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <Input required\r\n                                                                                   onChange={handleChange}\r\n                                                                                   type=\"number\" min=\"1\" max={6}\r\n                                                                                   name=\"tenor\"\r\n                                                                                   placeholder=\"tenor\"/>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"interestRate\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Interest Rate\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <InputGroup>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    name=\"interestRate\"\r\n                                                                                    placeholder=\"interest rate\" min={0}\r\n                                                                                    max={100}\r\n                                                                                    type=\"number\" min=\"0\" step=\"1\"/>\r\n                                                                                <InputGroupText>%</InputGroupText>\r\n                                                                            </InputGroup>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"select\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Loan Purpose\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <select\r\n                                                                                style={{width:\"69vw\", height:\"calc(1.5em + .75rem + 2px)\",\r\n                                                                                    borderRadius:\"0.5vw\", outlineColor:\"#ced4da\"}}\r\n                                                                                onChange={e => setData({\r\n                                                                                ...data,\r\n                                                                                needType: e.target.value\r\n                                                                            })}>\r\n                                                                                <option selected disabled hidden>Choose\r\n                                                                                    here\r\n                                                                                </option>\r\n                                                                                {needs?.list?.map((e, i) => (\r\n                                                                                    <option key={i} value={e.id}\r\n                                                                                            data={e}\r\n                                                                                            selected={e.id == data?.id || false}>{e.type}</option>\r\n                                                                                ))}\r\n                                                                            </select>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"notes\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Note\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                            <p style={{\r\n                                                                                fontSize: \"0.7vw\",\r\n                                                                                color: \"grey\"\r\n                                                                            }}>(max. 250 character )</p>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <Input\r\n                                                                                required\r\n                                                                                onChange={handleChange}\r\n                                                                                type=\"textarea\"\r\n                                                                                name=\"notes\"\r\n                                                                                id=\"notes\"\r\n                                                                                maxLength={250}\r\n                                                                                placeholder=\"input note\"/>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup check row>\r\n                                                                        <Col sm={{size: 10, offset: 2}}>\r\n                                                                            <Button style={{background: \"#e42256\"}}>\r\n                                                                                <FontAwesomeIcon icon={faSave}/>\r\n                                                                                Submit\r\n                                                                            </Button> {' '}\r\n                                                                            <Button href=\"/customer/staff\"\r\n                                                                                    style={{background: \"#e42256\"}}>\r\n                                                                                <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                                                                Cancel\r\n                                                                            </Button>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                </Form> :\r\n                                                                <div>\r\n                                                                    <Spinner style={{\r\n                                                                        width: '5rem',\r\n                                                                        height: '5rem',\r\n                                                                        color: \"#e42256\"\r\n                                                                    }}/>{' '}\r\n                                                                </div>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.findCustomerByIdReducer.data,\r\n        savedTransaction: state.saveTransactionReducer.data,\r\n        isLoading: state.saveTransactionReducer.isLoading,\r\n        error: state.saveTransactionReducer.error,\r\n        needs: state.findAllNeedReducer.data\r\n    }\r\n    console.log(\"mapStateToProps\", findAllNeedReducer.data)\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveTransactionAction, findAllNeedAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionList.js",["521","522","523","524","525","526"],"import {Button, ButtonGroup, Container, Spinner, Table} from \"reactstrap\";\r\nimport Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\r\nimport TransactionRow from \"./TransactionRow\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport SignIn from \"../../account/SignIn\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Error from \"../../Error\";\r\nimport {PaginationButton} from \"../../../components/Buttons\";\r\n\r\nfunction TransactionList({\r\n                             isLoading,\r\n                             transactions,\r\n                             error,\r\n                             findAllTransactionAction,\r\n    size, total, currentPage\r\n                         }) {\r\n\r\n    const [transaction, setTransaction] = useState([])\r\n\r\n    const [pageParam, setPageParam] = useState(0)\r\n    const [sizeParam, setSizeParam] = useState(10)\r\n\r\n    const totalPage = Math.ceil(total/size)\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [pageParam, sizeParam])\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(transaction) {\r\n            setTransaction(transactions)\r\n        }\r\n    }, [transactions])\r\n\r\n    const onReload = () => {\r\n        findAllTransactionAction(\r\n            {page: pageParam, size: sizeParam}\r\n        );\r\n    };\r\n\r\n    useEffect(onReload, [findAllTransactionAction, pageParam, sizeParam])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n               localStorage.getItem(\"readAllTransaction\") == \"true\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">List Transaction</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n\r\n                                                        <h5>Limit</h5>\r\n                                                        <ButtonGroup size=\"sm\">\r\n                                                            <Button onClick={() => {setSizeParam(1)}}>1</Button>\r\n                                                            <Button onClick={() => {setSizeParam(2)}}>2</Button>\r\n                                                            <Button onClick={() => {setSizeParam(3)}}>3</Button>\r\n                                                        </ButtonGroup>\r\n\r\n                                                        <TableScrollbar rows={10}>\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\r\n                                                            <tr>\r\n                                                                <th>No</th>\r\n                                                                <th>Name</th>\r\n                                                                <th>Employee Type</th>\r\n                                                                <th>Loan</th>\r\n                                                                <th>Tenor</th>\r\n                                                                <th>Interest Rate</th>\r\n                                                                <th>Pending Approval</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n                                                            {\r\n                                                                !isLoading ?\r\n                                                                    // transactions?.list?.map((e, i) => {\r\n                                                                    transaction.map((e, i) => {\r\n                                                                        return (\r\n                                                                            <TransactionRow key={i} data={e}\r\n                                                                                            number={(pageParam * sizeParam) + 1 + i}/>\r\n                                                                        )\r\n                                                                    }) :\r\n                                                                    <div style={{flex:1, alignItems:\"center\"}}>\r\n                                                                        <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                    </div>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        </TableScrollbar>\r\n\r\n                                                        <br></br>\r\n                                                        <PaginationButton\r\n                                                            currentPage = {currentPage}\r\n                                                            setPage={setPageParam}\r\n                                                            totalPage={totalPage}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Containers>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                       <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllTransactionReducer.error,\r\n        transactions: state.findAllTransactionReducer.data || [],\r\n        isLoading: state.findAllTransactionReducer.isLoading,\r\n        size: state.findAllTransactionReducer.pagination.size,\r\n        total: state.findAllTransactionReducer.pagination.total,\r\n        currentPage: state.findAllTransactionReducer.pagination.page\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllTransactionAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\customerForm\\CustomerForm.js",["527","528","529","530","531","532","533","534","535","536","537","538","539","540","541"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\Containers\\index.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\ListCustomer.js",["542","543","544","545","546","547","548"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Home.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\api.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\RowCustomer.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\SignIn.js",["549"],"import React, {useEffect, useState} from \"react\";\r\nimport {faKey, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Button} from \"reactstrap\";\r\nimport undraw_Access_account_re_8spm from \"../../assets/images/undraw_Access_account_re_8spm.svg\"\r\nimport \"./login.css\"\r\nimport {useHistory} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginRequestAction} from \"../../actions/loginAction\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst SignIn = ({loginData, isLoading, error, dispatchLoginAction}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const [validation, setValidation] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                username: username,\r\n                password: password\r\n            }\r\n            dispatchLoginAction(data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // jika login sukses\r\n        if (loginData) {\r\n            localStorage.setItem('token', loginData.token)\r\n            localStorage.setItem('roles', loginData.roles)\r\n            localStorage.setItem('username', loginData.username)\r\n            localStorage.setItem('fullName', loginData.fullName)\r\n            localStorage.setItem('inputCustomer', loginData.inputCustomer)\r\n            localStorage.setItem('readAllCustomer', loginData.readAllCustomer)\r\n            localStorage.setItem('inputTransaction', loginData.inputTransaction)\r\n            localStorage.setItem('readAllTransaction', loginData.readAllTransaction)\r\n            localStorage.setItem('approveTransaction', loginData.approveTransaction)\r\n            localStorage.setItem('readAllReport', loginData.readAllReport)\r\n            localStorage.setItem('readAllReportByTransaction', loginData.readAllReportByTransaction)\r\n            localStorage.setItem('master', loginData.master)\r\n\r\n            console.log(\"sukses login\", localStorage)\r\n\r\n            //pilih role\r\n            // if (loginData.roles === \"MASTER\") {\r\n            //     history.push('/dashboard')\r\n            //     // window.location.href = \"/login\"\r\n            // } else if (loginData.roles === \"STAFF\") {\r\n            //     history.push('/dashboard')\r\n            // } else if (loginData.roles === \"SUPERVISOR\") {\r\n            //     history.push('/dashboard')\r\n            // } else {\r\n            //     setValidation(\"*Sorry you are not allowed to sign here\")\r\n            // }\r\n\r\n            // history.push('/dashboard')\r\n            swal(\"Login Success!\", \"\", \"success\").then((value) => {\r\n              window.location.href = \"/dashboard\"\r\n            });\r\n\r\n        }\r\n        // jika login error\r\n        if (error) {\r\n            setValidation(\"*Username or Password invalid!\")\r\n            swal(\"Login Error!\", \"\", \"error\")\r\n        }\r\n\r\n    }, [loginData, error])\r\n\r\n    useEffect(() => {\r\n        setValidation(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n    }, [username, password])\r\n\r\n    const validate = () => {\r\n        //var kosong, agar bisa di update isinya\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (usernameError || passwordError) {\r\n            setUsernameError(usernameError);\r\n            setPasswordError(passwordError);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <div>\r\n                        <img src={undraw_Access_account_re_8spm} alt=\"\"\r\n                             className=\"img-fluid d-none d-md-block\"/>\r\n                        <br/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>OK 200</h1><br/>\r\n                    <h5 style={{color: \"#e42256\", fontSize: \"35px\"}}>Credit Partner</h5><br/>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"username\"\r\n                                       type=\"text\"\r\n                                       name=\"username\"\r\n                                       placeholder=\"Username\"\r\n                                       onChange={(e) => handleUsernameChange(e)}\r\n                                       value={username}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>\r\n                                {usernameError}\r\n                            </div>\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       onChange={(e) => handlePasswordChange(e)}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>{passwordError}</div>\r\n\r\n                            <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                <div style={{fontSize: 12, color: \"red\"}}>{validation}</div>\r\n                                <Button\r\n                                    style={{background: \"#e42256\"}}\r\n                                    type=\"submit\"\r\n                                    block>\r\n                                        <span className=\"font-weight-bold\"\r\n                                              style={{color: \"#ffff\"}}>SIGN IN</span>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginData: state.loginReducer.data,\r\n        isLoading: state.loginReducer.isLoading,\r\n        error: state.loginReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchLoginAction: loginRequestAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\SignUp.js",["550","551","552","553","554","555","556","557","558","559","560","561"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope, faKey,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./login.css\"\r\nimport {Spinner, Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\r\nimport {findAccountByIdAction, saveAccountAction} from \"../../actions/signupAction\";\r\nimport {connect} from \"react-redux\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../Error\";\r\nimport {findAllRoleAction} from \"../../actions/roleAction\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\n\r\nconst SignUp = ({saveDispatch, error, saveAccount, account, isLoading, findAccountByIdAction, roles, findAllRoleAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [photo, setPhoto] = useState({\r\n        profilePicture: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        username: \"\",\r\n        fullName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        profilePicture: \"\",\r\n        role: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    const onReload = () => {\r\n        findAllRoleAction()\r\n    }\r\n    useEffect(onReload, [findAllRoleAction])\r\n\r\n    useEffect(() => {\r\n        findAllRoleAction()\r\n    }, [findAllRoleAction])\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            findAccountByIdAction(id)\r\n        }\r\n        console.log(\"\")\r\n    }, [id, findAccountByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id && account) {\r\n            setData({...account})\r\n        }\r\n    }, [account])\r\n    console.log(\"ini id\", id)\r\n\r\n    // console.log(\"this account\", model)\r\n    // useEffect(() => {\r\n    //     if (id !== data.id) {\r\n    //         findAccountByIdAction(id);\r\n    //         setData(account)\r\n    //     }\r\n    //     console.log(\"AKUN\", account)\r\n    //     console.log(\"DATA\", data.id)\r\n    //     console.log(data)\r\n    // }, [account])\r\n\r\n    useEffect(() => {\r\n        if (saveAccount) {\r\n            swal(\"Register Success\", \"\", \"success\")\r\n            history.push('/master')\r\n        }\r\n        if (error) {\r\n            swal(\"Register error\", `${error.message}`, \"error\")\r\n        }\r\n    }, [saveAccount, history, error])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto({...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name]: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleRoles = (e) => {\r\n        setData({\r\n            ...data,\r\n            role: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n        saveDispatch(data)\r\n        swal(\"Save Success!\", \"\", \"success\");\r\n\r\n        console.log(\"submit\" , data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/master\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/master\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_Updated_resume_re_q1or} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Account</h1>\r\n\r\n                                                                        {!isLoading ?\r\n                                                                            <Form onSubmit={handleSubmit}>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faUserCircle}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.fullName || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"fullName\"\r\n                                                                                            placeholder=\"Full Name\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faUser}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data.username || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"username\"\r\n                                                                                            placeholder=\"Username\"\r\n                                                                                            minLength={4}\r\n                                                                                            maxLength={10}\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faEnvelope}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data.email || \"\"}\r\n                                                                                            type=\"email\"\r\n                                                                                            name=\"email\"\r\n                                                                                            placeholder=\"Email Address\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n                                                                                    {\r\n                                                                                        window.location.pathname != \"/register\" ?\r\n                                                                                            <div\r\n                                                                                                className=\"input-group col-lg-12 mb-4\">\r\n                                                                                                <div\r\n                                                                                                    className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faKey}/>\r\n                                                                                            </span>\r\n                                                                                                </div>\r\n                                                                                                <input\r\n                                                                                                    required\r\n                                                                                                    onChange={handleChange}\r\n                                                                                                    value={data.password || \"\"}\r\n                                                                                                    type=\"password\"\r\n                                                                                                    name=\"password\"\r\n                                                                                                    placeholder=\"Input new password\"\r\n                                                                                                    className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                            </div>\r\n: <> </>\r\n                                                                                    }\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n\r\n                                                                                        <div>\r\n                                                                                            <Col sm={15}>\r\n                                                                                                <select\r\n                                                                                                    style={{width:\"35vw\", height:\"calc(1.5em + .75rem + 2px)\",\r\n                                                                                                        borderRadius:\"0.5vw\", outlineColor:\"#ced4da\"}}\r\n                                                                                                    onChange={e => setData({\r\n                                                                                                        ...data,\r\n                                                                                                        role: e.target.value\r\n                                                                                                    })}>\r\n                                                                                                    <option selected disabled hidden>Choose\r\n                                                                                                        here\r\n                                                                                                    </option>\r\n                                                                                                    {roles?.list?.map((e, i) => (\r\n                                                                                                        <option key={i} value={e.name}\r\n                                                                                                                data={e}\r\n                                                                                                                selected={e.id == data?.id || false}>{e.name}</option>\r\n                                                                                                    ))}\r\n                                                                                                </select>\r\n                                                                                            </Col>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n\r\n                                                                                    {/*<div*/}\r\n                                                                                    {/*    className=\"input-group col-lg-12 mb-4\">*/}\r\n                                                                                    {/*    <FormGroup>*/}\r\n                                                                                    {/*        <Label for=\"profilePicture\"*/}\r\n                                                                                    {/*               sm={4}>Profile*/}\r\n                                                                                    {/*            Photo</Label>*/}\r\n                                                                                    {/*        <Col sm={12}>*/}\r\n                                                                                    {/*            <Input*/}\r\n                                                                                    {/*                type=\"file\"*/}\r\n                                                                                    {/*                name=\"profilePicture\"*/}\r\n                                                                                    {/*                onChange={handlePhoto}*/}\r\n                                                                                    {/*                accept=\"image/jpeg, image/png\"/>*/}\r\n                                                                                    {/*        </Col>*/}\r\n                                                                                    {/*    </FormGroup>*/}\r\n                                                                                    {/*</div>*/}\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                                                                            <span className=\"font-weight-bold\"\r\n                                                                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n                                                                            :\r\n                                                                            <div>\r\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                            </div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        account: state.findAccountByIdReducer.data,\r\n        saveAccount: state.saveAccountReducer.data,\r\n        error: state.saveAccountReducer.error,\r\n        isLoading: state.findAccountByIdReducer.isLoading || state.saveAccountReducer.isLoading,\r\n        update: state.updateAccountReducer,\r\n        roles: state.findAllRoleReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDispatch: saveAccountAction,\r\n    findAccountByIdAction,\r\n    findAllRoleAction\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    mapDispatchToProps)(SignUp);","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\AccountList.js",["562","563","564","565","566","567","568"],"import React, {useEffect, useState} from \"react\";\r\nimport AccountRow from \"./AccountRow\";\r\nimport {findAccountByIdAction, findAllAccountAction, removeByIdAccountAction} from \"../../actions/signupAction\";\r\nimport {connect} from \"react-redux\";\r\nimport Containers from '../../components/Containers/Container'\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../Error\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {PaginationButton} from \"../../components/Buttons\";\r\n\r\n\r\nfunction AccountList({\r\n                         error,\r\n                         isLoading,\r\n                         accounts,\r\n                         findAllAccountAction,\r\n                         dispatchRemoveById,\r\n                         isRemoved\r\n                     }) {\r\n\r\n\r\n    const onReload = () => {\r\n        findAllAccountAction(\r\n        )\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        swal({\r\n            title: \"Are you sure to delete this data?\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then(willDelete => {\r\n                if (willDelete) {\r\n                    dispatchRemoveById(id);\r\n                    swal(\"Successful deleted\", {\r\n                        icon: \"success\"\r\n                    });\r\n                } else {\r\n                    swal(\"Failed to delete\")\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(onReload, [findAllAccountAction\r\n    ])\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(isRemoved) {\r\n            onReload()\r\n        }\r\n    }, [isRemoved])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n            <Containers error={error} >\r\n            <Header/>\r\n            <Menu/>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0 text-dark\">List Account</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header border-0\">\r\n                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                        <div className=\"card-tools\">\r\n                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                            {/*    <i className=\"fas fa-download\"/>*/}\r\n                                            {/*</a>*/}\r\n                                            <a href=\"/register\" className=\"btn btn-tool btn-sm\">\r\n                                                <i className=\"fas fa-user-plus\"/>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body table-responsive p-0\">\r\n                                        <table className=\"table table-striped table-valign-middle\">\r\n\r\n                                        <thead style={{textAlign:\"left\"}}>\r\n                    <tr>\r\n                        <th>Number</th>\r\n                        <th>Username</th>\r\n                        <th>Full Name</th>\r\n                        <th>Email</th>\r\n                        <th>Verification</th>\r\n                        <th>Role</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody style={{textAlign:\"left\"}}>\r\n                    {\r\n                        !isLoading ?\r\n                            accounts?.list?.map((e,i) => {\r\n\r\n                                return(\r\n                                    <AccountRow onDeleted={() => onDelete(e.id)} key={i} data={e}\r\n                                                number={(accounts.page * accounts.size) + 1 + i}/>\r\n                                )\r\n                            }) :\r\n                            <tr>\r\n                                <td colSpan=\"8\"> Loading..</td>\r\n                            </tr>\r\n                    }\r\n                    </tbody>\r\n                                        </table>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n            </Containers>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accounts: state.findAllAccountReducer.data,\r\n        isLoading: state.findAllAccountReducer.isLoading,\r\n        error: state.findAllAccountReducer.error || state.removeAccountByIdReducer.error,\r\n        isRemoved: state.removeAccountByIdReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllAccountAction,\r\n    dispatchRemoveById: removeByIdAccountAction\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountList)\r\n","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\EditAccount.js",["569"],"import Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport undraw_profile from \"../../assets/images/undraw_profile.svg\";\r\nimport {Button, Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope, faKey, faUser, faUserCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport Error from \"../Error\";\r\nimport React from \"react\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\n\r\n\r\nconst EditAccount = () => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/master\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_profile} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Edit Account</h1>\r\n\r\n\r\n                                                                        <Form>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUserCircle}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        type=\"text\"\r\n                                                                                        name=\"fullName\"\r\n                                                                                        placeholder=\"Full Name\"\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                </div>\r\n\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        type=\"text\"\r\n                                                                                        name=\"username\"\r\n                                                                                        placeholder=\"Username\"\r\n                                                                                        minLength={4}\r\n                                                                                        maxLength={10}\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        type=\"email\"\r\n                                                                                        name=\"email\"\r\n                                                                                        placeholder=\"Email Address\"\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                                                                <span\r\n                                                                                    className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                    <FontAwesomeIcon icon={faKey}/>\r\n                                                                                </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        type=\"password\"\r\n                                                                                        name=\"password\"\r\n                                                                                        placeholder=\"Password\"\r\n                                                                                        minLength={4}\r\n                                                                                        maxLength={10}\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\"\r\n                                                                                    style={{width: \"120vh !important\"}}>\r\n\r\n                                                                                    <DropdownList\r\n                                                                                        style={{height:\"200vh\"}}\r\n                                                                                        data={[\r\n                                                                                            {\r\n                                                                                                value: \"STAFF\",\r\n                                                                                                label: \"STAFF\"\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                value: \"SUPERVISOR\",\r\n                                                                                                label: \"SUPERVISOR\"\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        placeholder=\"Select Role\"\r\n\r\n                                                                                    />\r\n                                                                                </div>\r\n\r\n                                                                                {/*<div*/}\r\n                                                                                {/*    className=\"input-group col-lg-12 mb-4\">*/}\r\n                                                                                {/*    <FormGroup>*/}\r\n                                                                                {/*        <Label for=\"profilePicture\"*/}\r\n                                                                                {/*               sm={4}>Profile*/}\r\n                                                                                {/*            Photo</Label>*/}\r\n                                                                                {/*        <Col sm={12}>*/}\r\n                                                                                {/*            <Input*/}\r\n                                                                                {/*                type=\"file\"*/}\r\n                                                                                {/*                name=\"profilePicture\"*/}\r\n                                                                                {/*                onChange={handlePhoto}*/}\r\n                                                                                {/*                accept=\"image/jpeg, image/png\"/>*/}\r\n                                                                                {/*        </Col>*/}\r\n                                                                                {/*    </FormGroup>*/}\r\n                                                                                {/*</div>*/}\r\n\r\n                                                                                <div\r\n                                                                                    className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                    <Button\r\n                                                                                        style={{background: \"#e42256\"}}\r\n                                                                                        block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>UPDATE</span>\r\n                                                                                    </Button>\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n                                                                        </Form>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default EditAccount","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\roleReducer.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\userReducer.js",["570","571","572"],"import {\r\n    CHANGE_PASSWORD_USER, CHANGE_PASSWORD_USER_FAILURE,\r\n    CHANGE_PASSWORD_USER_SUCCESS,\r\n    SAVE_CUSTOMER,\r\n    SAVE_CUSTOMER_FAILURE,\r\n    SAVE_CUSTOMER_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const changePasswordReducer = (state = {...initialState}, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_PASSWORD_USER:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case CHANGE_PASSWORD_USER_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case CHANGE_PASSWORD_USER_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\roleSaga.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\userSaga.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\profile\\EditProfile.js",["573","574","575","576","577","578","579","580"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"../account/login.css\"\r\nimport {Spinner, Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport Error from \"../Error\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\n\r\nconst EditProfile = () => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"false\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_Updated_resume_re_q1or} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Edit Account</h1>\r\n\r\n                                                                        {/*{!isLoading ?*/}\r\n                                                                            <Form>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faUserCircle}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"fullName\"\r\n                                                                                            placeholder=\"Full Name\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faUser}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"username\"\r\n                                                                                            placeholder=\"Username\"\r\n                                                                                            minLength={4}\r\n                                                                                            maxLength={10}\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faEnvelope}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"email\"\r\n                                                                                            name=\"email\"\r\n                                                                                            placeholder=\"Email Address\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <FormGroup>\r\n                                                                                            <Label for=\"profilePicture\"\r\n                                                                                                   sm={4}>Profile\r\n                                                                                                Photo</Label>\r\n                                                                                            <Col sm={12}>\r\n                                                                                                <Input\r\n                                                                                                    type=\"file\"\r\n                                                                                                    name=\"profilePicture\"\r\n                                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                                            </Col>\r\n                                                                                        </FormGroup>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                                                                            <span className=\"font-weight-bold\"\r\n                                                                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default EditProfile;","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\role\\RoleMenu.js",["581","582","583","584","585"],"import React, {useEffect, useState} from \"react\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport Containers from \"../../components/Containers/Container\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\nimport {Row, Col, FormGroup, Input, Label, Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport swal from \"sweetalert\";\r\nimport {findRoleByIdAction, removeByIdRoleAction, saveRoleAction, updateRoleAction} from \"../../actions/roleAction\";\r\n\r\n\r\nconst RoleMenu = ({saveRoleAction, saveRole, error, isLoading, role, findRoleByIdAction, updateRoleAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        inputCustomer: false,\r\n        readAllCustomer: false,\r\n        inputTransaction: false,\r\n        readAllTransaction: false,\r\n        approveTransaction: false,\r\n        readAllReport: false,\r\n        readAllReportByTransaction: false\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            findRoleByIdAction(id)\r\n        }\r\n    }, [id, findRoleByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id && role) {\r\n            setData({...role})\r\n        }\r\n    }, role)\r\n\r\n    useEffect(() => {\r\n        if (saveRole) {\r\n            swal(\"Add Loan Purpose Success\", \"\", \"success\")\r\n            history.push('/role')\r\n        }\r\n        if (error) {\r\n            swal(\"Sorry data already exist\", '', \"error\")\r\n        }\r\n    }, [saveRole, history, error])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n    }\r\n\r\n    const handleChecked = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.checked\r\n        setData({...data, [name]: value})\r\n        console.log(data)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (id) {\r\n            updateRoleAction(id, data)\r\n        } else {\r\n            saveRoleAction(data)\r\n        }\r\n        swal(\"Save Success!\", \"\", \"success\");\r\n        console.log(\"handlesubmit\", data)\r\n        history.push('/role')\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/role\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <Containers>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Management Role</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-8\" style={{alignContent: \"center\"}}>\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-body table-responsive\">\r\n                                                        <form onSubmit={handleSubmit}>\r\n                                                            <FormGroup row>\r\n                                                                <Col>\r\n                                                                    <h6 style={{textAlign: \"left\", color: \"grey\"}}>Role\r\n                                                                        name\r\n                                                                        <span style={{color: \"red\"}}> *</span>\r\n                                                                    </h6>\r\n                                                                </Col>\r\n                                                                <Col sm={12} style={{textAlign: \"left\"}}>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        value={data?.name}\r\n                                                                        type=\"text\"\r\n                                                                        name=\"name\"\r\n                                                                        placeholder=\"input role\"/>\r\n                                                                </Col>\r\n                                                            </FormGroup><br/>\r\n\r\n                                                            <Row>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <h4>Customer</h4>\r\n                                                                </Col>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"inputCustomer\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               checked={data.inputCustomer}\r\n                                                                               value={data.inputCustomer}\r\n                                                                               id=\"defaultCheck1\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck1\">\r\n                                                                            Input Customer\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"readAllCustomer\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.readAllCustomer}\r\n                                                                               checked={data?.readAllCustomer}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Read All Customer\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col/>\r\n                                                            </Row>\r\n                                                            <hr/>\r\n                                                            <Row>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <h4>Transaction</h4>\r\n                                                                </Col>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"inputTransaction\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.inputTransaction}\r\n                                                                               checked={data?.inputTransaction}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Input Transaction\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"readAllTransaction\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.readAllTransaction}\r\n                                                                               checked={data?.readAllTransaction}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Read All Transaction\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"approveTransaction\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.approveTransaction}\r\n                                                                               checked={data?.approveTransaction}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Approval Transaction\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col/>\r\n                                                            </Row>\r\n                                                            <hr/>\r\n                                                            <Row>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <h4>Report</h4>\r\n                                                                </Col>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"readAllReport\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.readAllReport}\r\n                                                                               checked={data?.readAllReport}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Read All Report\r\n                                                                        </label>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"readAllReportByTransaction\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.readAllReportByTransaction}\r\n                                                                               checked={data?.readAllReportByTransaction}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Read Report By Submitter\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col/>\r\n                                                            </Row>\r\n                                                            <br/>\r\n\r\n                                                            <Row>\r\n                                                                <Col sm={{size: 10, offset: 2}}\r\n                                                                     style={{textAlign: \"right\"}}>\r\n                                                                    <Button style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon icon={faSave}/>\r\n                                                                        Submit\r\n                                                                    </Button> {' '}\r\n                                                                    <Button href=\"/role\"\r\n                                                                            style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon\r\n                                                                            icon={faArrowLeft}/>\r\n                                                                        Cancel\r\n                                                                    </Button>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </form>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n\r\n                        </Containers>\r\n                        <Footer/>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        saveRole: state.saveRoleReducer .data,\r\n        error: state.saveRoleReducer.error,\r\n        isLoading: state.saveRoleReducer.isLoading || state.findRoleByIdReducer.isLoading,\r\n        role: state.findRoleByIdReducer.data,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoleAction,\r\n    findRoleByIdAction,\r\n    removeByIdRoleAction,\r\n    updateRoleAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleMenu)","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\profile\\EditPassword.js",["586","587","588"],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\role\\RoleList.js",["589","590","591","592"],"import React, {useEffect} from \"react\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {connect} from \"react-redux\";\r\nimport Containers from \"../../components/Containers/Container\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\nimport RoleRow from \"./RoleRow\";\r\nimport {findAllRoleAction, removeByIdRoleAction} from \"../../actions/roleAction\";\r\nimport ReasonRow from \"../reasonUse/ReasonRow\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst ReasonUse = ({\r\n                       roles,\r\n                       findAllRoleAction,\r\n                       error,\r\n                       isLoading,\r\n                       removeByIdRoleAction,\r\n    isRemoved\r\n                   }) => {\r\n\r\n    const onReload = () => {\r\n        findAllRoleAction()\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        swal({\r\n            title: \"Are you sure to delete this data?\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then(willDelete => {\r\n                if (willDelete) {\r\n                    removeByIdRoleAction(id);\r\n                    swal(\"Successful deleted\", {\r\n                        icon: \"success\"\r\n                    });\r\n                } else {\r\n                    swal(\"Failed to delete\")\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(onReload, [findAllRoleAction])\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [findAllRoleAction])\r\n\r\n    useEffect(() => {\r\n        if(isRemoved) {\r\n            onReload()\r\n        }\r\n    }, [isRemoved])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <h1 className=\"m-0 text-dark\">Management Role</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\r\n                                            <div className=\"col-lg-8\" >\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\r\n                                                            {/*</a>*/}\r\n                                                            <a href=\"/role/form\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-plus-circle\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n                                                            <thead style={{textAlign: \"left\"}}>\r\n                                                            <tr>\r\n                                                                <th>No</th>\r\n                                                                <th>Role</th>\r\n                                                                <th>Action</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n                                                            {\r\n                                                                !isLoading ?\r\n                                                                    roles?.list?.map((e,i) => {\r\n                                                                        return(\r\n                                                                            <RoleRow onDeleted={() => onDelete(e.id)}\r\n                                                                                key={i} data={e}\r\n                                                                                     number={(roles.page * roles.size) + 1 + i}/>\r\n                                                                        )\r\n                                                                    }) :\r\n                                                                    <tr>\r\n                                                                        <td colSpan=\"3\"> Loading..</td>\r\n                                                                    </tr>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n\r\n                        </Containers>\r\n                        <Footer/>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        roles: state.findAllRoleReducer.data,\r\n        error: state.findAllRoleReducer.error || state.removeRoleByIdReducer.error,\r\n        isLoading: state.findAllRoleReducer.isLoading,\r\n        isRemoved: state.removeRoleByIdReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllRoleAction,\r\n    removeByIdRoleAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonUse)","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\reportByStaff\\ListReportByStaff.js",["593","594","595","596","597","598","599"],"import Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport Row from \"./Row\";\r\nimport Footer from \"../../../components/dashboard/Footer\";\r\nimport {findAllReportAction} from \"../../../actions/reportAction\";\r\nimport Error from \"../../Error\";\r\nimport {Button, ButtonGroup, Spinner} from \"reactstrap\";\r\nimport {PaginationButton} from \"../../../components/Buttons\";\r\n\r\nfunction ReportList({\r\n                        isLoading, reports, error, findAllReportAction, size, total, currentPage\r\n                    }) {\r\n\r\n    const [report, setReport] = useState([])\r\n\r\n    const [pageParam, setPageParam] = useState(0)\r\n    const [sizeParam, setSizeParam] = useState(10)\r\n\r\n    const totalPage = Math.ceil(total/size)\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [pageParam, sizeParam])\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(report) {\r\n            setReport(reports)\r\n        }\r\n    }, [reports])\r\n\r\n    const onReload = () => {\r\n        findAllReportAction({page: pageParam, size: sizeParam});\r\n        console.log(\"ini data\", reports)\r\n    }\r\n\r\n    const handleLimit = (limit) => {\r\n        setSizeParam(limit)\r\n        setPageParam(0)\r\n    }\r\n\r\n    useEffect(onReload, [findAllReportAction, pageParam, sizeParam])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"readAllReportByTransaction\") ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Report</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"#\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-download\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n\r\n                                                        <TableScrollbar rows={10}>\r\n                                                            <table className=\"table table-striped table-bordered table-align-middle table-head-fixed\">\r\n                                                                <thead style={{background:\"#FCE051\"}}>\r\n                                                                <tr >\r\n                                                                    <th colSpan=\"5\"> Customer Data</th>\r\n                                                                    <th colSpan=\"11\">Transaction</th>\r\n                                                                    <th colSpan=\"5\">Approved</th>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <th>No</th>\r\n                                                                    <th>Name</th>\r\n                                                                    <th>Email</th>\r\n                                                                    <th>Id Card</th>\r\n                                                                    <th>Address</th>\r\n                                                                    <th>Employee Type</th>\r\n                                                                    <th>Income</th>\r\n                                                                    <th>Outcome</th>\r\n                                                                    <th>Loan Amount</th>\r\n                                                                    <th>Interest Rate</th>\r\n                                                                    <th>Tenor</th>\r\n                                                                    <th>Principal</th>\r\n                                                                    <th>Interest</th>\r\n                                                                    <th>Installment</th>\r\n                                                                    <th>Installment Total</th>\r\n                                                                    <th>Status</th>\r\n                                                                    <th>Submitted Date</th>\r\n                                                                    <th>Approved Date</th>\r\n                                                                </tr>\r\n                                                                </thead>\r\n\r\n                                                                <tbody>\r\n                                                                {\r\n                                                                    ! isLoading ?\r\n                                                                        report.map((e,i) => {\r\n                                                                            return (\r\n                                                                                <Row key={i} data={e}\r\n                                                                                           number={(pageParam * sizeParam) + 1 + i}/>\r\n                                                                            )\r\n                                                                        }) :\r\n                                                                        <tr>\r\n                                                                            <div>\r\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                            </div>\r\n                                                                        </tr>\r\n\r\n                                                                }\r\n                                                                </tbody>\r\n\r\n                                                            </table>\r\n                                                        </TableScrollbar>\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <PaginationButton\r\n                                            currentPage = {currentPage}\r\n                                            setPage={setPageParam}\r\n                                            totalPage={totalPage}\r\n                                            handleLimit={handleLimit}\r\n                                            size={sizeParam}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n                        </Containers>\r\n\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        reports: state.findAllReportByStaff.data || [],\r\n        error: state.findAllReportByStaff.error,\r\n        isLoading: state.findAllReportByStaff.isLoading,\r\n        size: state.findAllReportByStaff.pagination.size,\r\n        total: state.findAllReportByStaff.pagination.total,\r\n        currentPage: state.findAllReportByStaff.pagination.page\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllReportAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportList);","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\pagination.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\RowList.js",["600","601"],"import React from 'react'\r\n\r\nconst RowList = ({data, onUpdate, number}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.name}</td>\r\n            <td>{data.idNumber} </td>\r\n            <td>{data.employeeType}</td>\r\n            <td>{data.submitter}</td>\r\n            <td>\r\n                <a onClick={data} href={`/customer/${data.id}/detail`} className=\"text-muted\">\r\n                    <i className=\"fas fa-info-circle\" />\r\n                </a>{' '}\r\n                {localStorage.getItem('inputCustomer') == \"true\" &&\r\n                    <>\r\n                <a onClick={onUpdate} href={`/customer/${data.id}/edit`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\"/>\r\n                </a>{' '}</>\r\n                }\r\n                {localStorage.getItem(\"inputTransaction\") == \"true\" &&\r\n                <>\r\n                <a onClick={data} href={`/transaction/form/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-wallet\" />\r\n                </a>\r\n                    </>}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RowList;\r\n","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\roleAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\AccountRow.js",["602"],"import React from \"react\";\r\n\r\n\r\nconst AccountRow = ({data, number, onUpdate, onDeleted}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.username}</td>\r\n            <td>{data.fullName}</td>\r\n            <td>{data.email}</td>\r\n            <td>\r\n                {data.isVerified ?\r\n                    \"Verified\" : \"Not Verified\"\r\n                }\r\n            </td>\r\n            <td>{data.role}</td>\r\n            <td>\r\n                <a onClick={onUpdate} href={`/master/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\" />\r\n                </a>{' '}\r\n                <a onClick={onDeleted} className=\"text-muted\">\r\n                    <i className=\"fas fa-trash-alt\" />\r\n                </a>{' '}\r\n\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default AccountRow;","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\Buttons\\index.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\role\\RoleRow.js",["603"],"import React from 'react'\r\n\r\nconst RoleRow = ({data, number, onDeleted, onUpdate}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.name}</td>\r\n            <td>\r\n                <a onClick={onUpdate} href={`/role/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\"/>\r\n                </a>{' '}\r\n                <a onClick={onDeleted} className=\"text-muted\">\r\n                    <i className=\"fas fa-trash-alt\"/>\r\n                </a>{' '}</td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RoleRow;","D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\reportByStaff\\Row.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\actions\\userAction.js",[],"D:\\ok200\\ok-200-credit\\project-credit-scoring\\src\\components\\Buttons\\Buttons.js",[],{"ruleId":"604","replacedBy":"605"},{"ruleId":"606","replacedBy":"607"},{"ruleId":"608","severity":1,"message":"609","line":5,"column":8,"nodeType":"610","messageId":"611","endLine":5,"endColumn":18},{"ruleId":"608","severity":1,"message":"612","line":10,"column":8,"nodeType":"610","messageId":"611","endLine":10,"endColumn":22},{"ruleId":"608","severity":1,"message":"613","line":15,"column":8,"nodeType":"610","messageId":"611","endLine":15,"endColumn":20},{"ruleId":"608","severity":1,"message":"614","line":7,"column":9,"nodeType":"610","messageId":"611","endLine":7,"endColumn":16},{"ruleId":"608","severity":1,"message":"615","line":7,"column":33,"nodeType":"610","messageId":"611","endLine":7,"endColumn":40},{"ruleId":"608","severity":1,"message":"616","line":7,"column":42,"nodeType":"610","messageId":"611","endLine":7,"endColumn":48},{"ruleId":"617","severity":1,"message":"618","line":87,"column":8,"nodeType":"619","endLine":87,"endColumn":22,"suggestions":"620"},{"ruleId":"617","severity":1,"message":"621","line":97,"column":8,"nodeType":"619","endLine":97,"endColumn":43,"suggestions":"622"},{"ruleId":"623","severity":1,"message":"624","line":101,"column":60,"nodeType":"625","messageId":"626","endLine":101,"endColumn":62},{"ruleId":"623","severity":1,"message":"624","line":104,"column":65,"nodeType":"625","messageId":"626","endLine":104,"endColumn":67},{"ruleId":"623","severity":1,"message":"624","line":118,"column":58,"nodeType":"625","messageId":"626","endLine":118,"endColumn":60},{"ruleId":"623","severity":1,"message":"624","line":118,"column":114,"nodeType":"625","messageId":"626","endLine":118,"endColumn":116},{"ruleId":"623","severity":1,"message":"624","line":144,"column":103,"nodeType":"625","messageId":"626","endLine":144,"endColumn":105},{"ruleId":"623","severity":1,"message":"624","line":166,"column":104,"nodeType":"625","messageId":"626","endLine":166,"endColumn":106},{"ruleId":"623","severity":1,"message":"624","line":235,"column":105,"nodeType":"625","messageId":"626","endLine":235,"endColumn":107},{"ruleId":"623","severity":1,"message":"624","line":259,"column":105,"nodeType":"625","messageId":"626","endLine":259,"endColumn":107},{"ruleId":"608","severity":1,"message":"627","line":7,"column":9,"nodeType":"610","messageId":"611","endLine":7,"endColumn":24},{"ruleId":"608","severity":1,"message":"628","line":8,"column":9,"nodeType":"610","messageId":"611","endLine":8,"endColumn":20},{"ruleId":"608","severity":1,"message":"629","line":8,"column":22,"nodeType":"610","messageId":"611","endLine":8,"endColumn":30},{"ruleId":"608","severity":1,"message":"630","line":8,"column":32,"nodeType":"610","messageId":"611","endLine":8,"endColumn":42},{"ruleId":"608","severity":1,"message":"631","line":8,"column":44,"nodeType":"610","messageId":"611","endLine":8,"endColumn":50},{"ruleId":"608","severity":1,"message":"632","line":15,"column":12,"nodeType":"610","messageId":"611","endLine":15,"endColumn":16},{"ruleId":"608","severity":1,"message":"633","line":15,"column":18,"nodeType":"610","messageId":"611","endLine":15,"endColumn":25},{"ruleId":"617","severity":1,"message":"621","line":20,"column":8,"nodeType":"619","endLine":20,"endColumn":32,"suggestions":"634"},{"ruleId":"617","severity":1,"message":"621","line":25,"column":8,"nodeType":"619","endLine":25,"endColumn":32,"suggestions":"635"},{"ruleId":"623","severity":1,"message":"624","line":30,"column":55,"nodeType":"625","messageId":"626","endLine":30,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":84,"column":88,"nodeType":"625","messageId":"626","endLine":84,"endColumn":90},{"ruleId":"636","severity":1,"message":"637","line":103,"column":81,"nodeType":"638","endLine":103,"endColumn":122},{"ruleId":"636","severity":1,"message":"637","line":107,"column":81,"nodeType":"638","endLine":107,"endColumn":127},{"ruleId":"639","severity":1,"message":"640","line":120,"column":31,"nodeType":"641","endLine":121,"endColumn":24},{"ruleId":"608","severity":1,"message":"642","line":6,"column":8,"nodeType":"610","messageId":"611","endLine":6,"endColumn":20},{"ruleId":"623","severity":1,"message":"624","line":18,"column":51,"nodeType":"625","messageId":"626","endLine":18,"endColumn":53},{"ruleId":"643","severity":1,"message":"644","line":35,"column":45,"nodeType":"638","endLine":36,"endColumn":80},{"ruleId":"608","severity":1,"message":"645","line":11,"column":9,"nodeType":"610","messageId":"611","endLine":11,"endColumn":15},{"ruleId":"608","severity":1,"message":"646","line":11,"column":17,"nodeType":"610","messageId":"611","endLine":11,"endColumn":28},{"ruleId":"617","severity":1,"message":"647","line":27,"column":8,"nodeType":"619","endLine":27,"endColumn":30,"suggestions":"648"},{"ruleId":"617","severity":1,"message":"647","line":31,"column":8,"nodeType":"619","endLine":31,"endColumn":10,"suggestions":"649"},{"ruleId":"617","severity":1,"message":"650","line":37,"column":8,"nodeType":"619","endLine":37,"endColumn":17,"suggestions":"651"},{"ruleId":"617","severity":1,"message":"652","line":49,"column":25,"nodeType":"619","endLine":49,"endColumn":68,"suggestions":"653"},{"ruleId":"623","severity":1,"message":"624","line":54,"column":55,"nodeType":"625","messageId":"626","endLine":54,"endColumn":57},{"ruleId":"654","severity":1,"message":"655","line":77,"column":61,"nodeType":"638","endLine":77,"endColumn":105},{"ruleId":"608","severity":1,"message":"656","line":9,"column":12,"nodeType":"610","messageId":"611","endLine":9,"endColumn":14},{"ruleId":"608","severity":1,"message":"632","line":10,"column":12,"nodeType":"610","messageId":"611","endLine":10,"endColumn":16},{"ruleId":"608","severity":1,"message":"633","line":10,"column":18,"nodeType":"610","messageId":"611","endLine":10,"endColumn":25},{"ruleId":"623","severity":1,"message":"624","line":19,"column":47,"nodeType":"625","messageId":"626","endLine":19,"endColumn":49},{"ruleId":"654","severity":1,"message":"655","line":39,"column":61,"nodeType":"638","endLine":39,"endColumn":105},{"ruleId":"608","severity":1,"message":"657","line":1,"column":27,"nodeType":"610","messageId":"611","endLine":1,"endColumn":35},{"ruleId":"608","severity":1,"message":"658","line":2,"column":9,"nodeType":"610","messageId":"611","endLine":2,"endColumn":17},{"ruleId":"608","severity":1,"message":"659","line":2,"column":19,"nodeType":"610","messageId":"611","endLine":2,"endColumn":29},{"ruleId":"608","severity":1,"message":"660","line":2,"column":31,"nodeType":"610","messageId":"611","endLine":2,"endColumn":40},{"ruleId":"608","severity":1,"message":"627","line":3,"column":9,"nodeType":"610","messageId":"611","endLine":3,"endColumn":24},{"ruleId":"608","severity":1,"message":"661","line":4,"column":9,"nodeType":"610","messageId":"611","endLine":4,"endColumn":15},{"ruleId":"608","severity":1,"message":"662","line":5,"column":9,"nodeType":"610","messageId":"611","endLine":5,"endColumn":18},{"ruleId":"608","severity":1,"message":"645","line":5,"column":20,"nodeType":"610","messageId":"611","endLine":5,"endColumn":26},{"ruleId":"608","severity":1,"message":"663","line":5,"column":28,"nodeType":"610","messageId":"611","endLine":5,"endColumn":32},{"ruleId":"608","severity":1,"message":"664","line":11,"column":8,"nodeType":"610","messageId":"611","endLine":11,"endColumn":22},{"ruleId":"608","severity":1,"message":"665","line":12,"column":8,"nodeType":"610","messageId":"611","endLine":12,"endColumn":14},{"ruleId":"608","severity":1,"message":"656","line":14,"column":12,"nodeType":"610","messageId":"611","endLine":14,"endColumn":14},{"ruleId":"608","severity":1,"message":"646","line":1,"column":9,"nodeType":"610","messageId":"611","endLine":1,"endColumn":20},{"ruleId":"608","severity":1,"message":"645","line":1,"column":22,"nodeType":"610","messageId":"611","endLine":1,"endColumn":28},{"ruleId":"608","severity":1,"message":"662","line":1,"column":30,"nodeType":"610","messageId":"611","endLine":1,"endColumn":39},{"ruleId":"608","severity":1,"message":"666","line":1,"column":41,"nodeType":"610","messageId":"611","endLine":1,"endColumn":46},{"ruleId":"617","severity":1,"message":"647","line":30,"column":8,"nodeType":"619","endLine":30,"endColumn":30,"suggestions":"667"},{"ruleId":"617","severity":1,"message":"647","line":36,"column":8,"nodeType":"619","endLine":36,"endColumn":10,"suggestions":"668"},{"ruleId":"617","severity":1,"message":"669","line":42,"column":8,"nodeType":"619","endLine":42,"endColumn":22,"suggestions":"670"},{"ruleId":"623","severity":1,"message":"624","line":61,"column":59,"nodeType":"625","messageId":"626","endLine":61,"endColumn":61},{"ruleId":"608","severity":1,"message":"671","line":11,"column":9,"nodeType":"610","messageId":"611","endLine":11,"endColumn":12},{"ruleId":"608","severity":1,"message":"672","line":11,"column":14,"nodeType":"610","messageId":"611","endLine":11,"endColumn":17},{"ruleId":"608","severity":1,"message":"645","line":11,"column":19,"nodeType":"610","messageId":"611","endLine":11,"endColumn":25},{"ruleId":"608","severity":1,"message":"646","line":11,"column":27,"nodeType":"610","messageId":"611","endLine":11,"endColumn":38},{"ruleId":"617","severity":1,"message":"647","line":30,"column":8,"nodeType":"619","endLine":30,"endColumn":30,"suggestions":"673"},{"ruleId":"617","severity":1,"message":"647","line":34,"column":8,"nodeType":"619","endLine":34,"endColumn":10,"suggestions":"674"},{"ruleId":"617","severity":1,"message":"675","line":40,"column":8,"nodeType":"619","endLine":40,"endColumn":19,"suggestions":"676"},{"ruleId":"623","severity":1,"message":"624","line":57,"column":55,"nodeType":"625","messageId":"626","endLine":57,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":84,"column":92,"nodeType":"625","messageId":"626","endLine":84,"endColumn":94},{"ruleId":"608","severity":1,"message":"677","line":3,"column":3,"nodeType":"610","messageId":"611","endLine":3,"endColumn":29},{"ruleId":"608","severity":1,"message":"678","line":6,"column":27,"nodeType":"610","messageId":"611","endLine":6,"endColumn":33},{"ruleId":"608","severity":1,"message":"679","line":6,"column":35,"nodeType":"610","messageId":"611","endLine":6,"endColumn":40},{"ruleId":"608","severity":1,"message":"680","line":6,"column":42,"nodeType":"610","messageId":"611","endLine":6,"endColumn":48},{"ruleId":"608","severity":1,"message":"681","line":7,"column":8,"nodeType":"610","messageId":"611","endLine":7,"endColumn":20},{"ruleId":"608","severity":1,"message":"682","line":8,"column":8,"nodeType":"610","messageId":"611","endLine":8,"endColumn":23},{"ruleId":"608","severity":1,"message":"683","line":5,"column":3,"nodeType":"610","messageId":"611","endLine":5,"endColumn":15},{"ruleId":"608","severity":1,"message":"684","line":6,"column":11,"nodeType":"610","messageId":"611","endLine":6,"endColumn":17},{"ruleId":"608","severity":1,"message":"685","line":8,"column":3,"nodeType":"610","messageId":"611","endLine":8,"endColumn":12},{"ruleId":"608","severity":1,"message":"686","line":9,"column":3,"nodeType":"610","messageId":"611","endLine":9,"endColumn":13},{"ruleId":"608","severity":1,"message":"687","line":10,"column":3,"nodeType":"610","messageId":"611","endLine":10,"endColumn":10},{"ruleId":"654","severity":1,"message":"655","line":56,"column":11,"nodeType":"638","endLine":56,"endColumn":119},{"ruleId":"623","severity":1,"message":"624","line":83,"column":41,"nodeType":"625","messageId":"626","endLine":83,"endColumn":43},{"ruleId":"608","severity":1,"message":"688","line":2,"column":9,"nodeType":"610","messageId":"611","endLine":2,"endColumn":22},{"ruleId":"608","severity":1,"message":"687","line":2,"column":24,"nodeType":"610","messageId":"611","endLine":2,"endColumn":31},{"ruleId":"608","severity":1,"message":"627","line":3,"column":9,"nodeType":"610","messageId":"611","endLine":3,"endColumn":24},{"ruleId":"654","severity":1,"message":"689","line":9,"column":9,"nodeType":"638","endLine":9,"endColumn":35},{"ruleId":"654","severity":1,"message":"655","line":30,"column":15,"nodeType":"638","endLine":30,"endColumn":47},{"ruleId":"623","severity":1,"message":"624","line":37,"column":44,"nodeType":"625","messageId":"626","endLine":37,"endColumn":46},{"ruleId":"623","severity":1,"message":"624","line":86,"column":44,"nodeType":"625","messageId":"626","endLine":86,"endColumn":46},{"ruleId":"623","severity":1,"message":"624","line":128,"column":44,"nodeType":"625","messageId":"626","endLine":128,"endColumn":46},{"ruleId":"608","severity":1,"message":"690","line":4,"column":9,"nodeType":"610","messageId":"611","endLine":4,"endColumn":22},{"ruleId":"608","severity":1,"message":"691","line":4,"column":24,"nodeType":"610","messageId":"611","endLine":4,"endColumn":36},{"ruleId":"608","severity":1,"message":"692","line":4,"column":38,"nodeType":"610","messageId":"611","endLine":4,"endColumn":49},{"ruleId":"608","severity":1,"message":"693","line":4,"column":69,"nodeType":"610","messageId":"611","endLine":4,"endColumn":76},{"ruleId":"608","severity":1,"message":"694","line":17,"column":11,"nodeType":"610","messageId":"611","endLine":17,"endColumn":17},{"ruleId":"608","severity":1,"message":"695","line":19,"column":11,"nodeType":"610","messageId":"611","endLine":19,"endColumn":24},{"ruleId":"608","severity":1,"message":"696","line":2,"column":5,"nodeType":"610","messageId":"611","endLine":2,"endColumn":22},{"ruleId":"608","severity":1,"message":"697","line":6,"column":5,"nodeType":"610","messageId":"611","endLine":6,"endColumn":39},{"ruleId":"608","severity":1,"message":"698","line":7,"column":5,"nodeType":"610","messageId":"611","endLine":7,"endColumn":39},{"ruleId":"608","severity":1,"message":"699","line":2,"column":5,"nodeType":"610","messageId":"611","endLine":2,"endColumn":24},{"ruleId":"608","severity":1,"message":"700","line":2,"column":26,"nodeType":"610","messageId":"611","endLine":2,"endColumn":53},{"ruleId":"608","severity":1,"message":"701","line":2,"column":55,"nodeType":"610","messageId":"611","endLine":2,"endColumn":82},{"ruleId":"608","severity":1,"message":"702","line":5,"column":32,"nodeType":"610","messageId":"611","endLine":5,"endColumn":53},{"ruleId":"608","severity":1,"message":"703","line":5,"column":55,"nodeType":"610","messageId":"611","endLine":5,"endColumn":84},{"ruleId":"608","severity":1,"message":"704","line":8,"column":28,"nodeType":"610","messageId":"611","endLine":8,"endColumn":43},{"ruleId":"608","severity":1,"message":"705","line":8,"column":45,"nodeType":"610","messageId":"611","endLine":8,"endColumn":68},{"ruleId":"608","severity":1,"message":"706","line":5,"column":5,"nodeType":"610","messageId":"611","endLine":5,"endColumn":30},{"ruleId":"608","severity":1,"message":"697","line":9,"column":5,"nodeType":"610","messageId":"611","endLine":9,"endColumn":39},{"ruleId":"608","severity":1,"message":"698","line":10,"column":5,"nodeType":"610","messageId":"611","endLine":10,"endColumn":39},{"ruleId":"608","severity":1,"message":"707","line":14,"column":5,"nodeType":"610","messageId":"611","endLine":14,"endColumn":30},{"ruleId":"608","severity":1,"message":"708","line":9,"column":43,"nodeType":"610","messageId":"611","endLine":9,"endColumn":58},{"ruleId":"608","severity":1,"message":"699","line":2,"column":5,"nodeType":"610","messageId":"611","endLine":2,"endColumn":24},{"ruleId":"608","severity":1,"message":"702","line":5,"column":32,"nodeType":"610","messageId":"611","endLine":5,"endColumn":53},{"ruleId":"608","severity":1,"message":"709","line":5,"column":55,"nodeType":"610","messageId":"611","endLine":5,"endColumn":84},{"ruleId":"608","severity":1,"message":"703","line":5,"column":86,"nodeType":"610","messageId":"611","endLine":5,"endColumn":115},{"ruleId":"608","severity":1,"message":"704","line":8,"column":28,"nodeType":"610","messageId":"611","endLine":8,"endColumn":43},{"ruleId":"608","severity":1,"message":"710","line":3,"column":9,"nodeType":"610","messageId":"611","endLine":3,"endColumn":22},{"ruleId":"608","severity":1,"message":"711","line":5,"column":9,"nodeType":"610","messageId":"611","endLine":5,"endColumn":20},{"ruleId":"608","severity":1,"message":"712","line":10,"column":8,"nodeType":"610","messageId":"611","endLine":10,"endColumn":20},{"ruleId":"608","severity":1,"message":"713","line":16,"column":8,"nodeType":"610","messageId":"611","endLine":16,"endColumn":17},{"ruleId":"608","severity":1,"message":"714","line":35,"column":11,"nodeType":"610","messageId":"611","endLine":35,"endColumn":25},{"ruleId":"608","severity":1,"message":"715","line":42,"column":11,"nodeType":"610","messageId":"611","endLine":42,"endColumn":21},{"ruleId":"617","severity":1,"message":"716","line":58,"column":8,"nodeType":"619","endLine":58,"endColumn":10,"suggestions":"717"},{"ruleId":"623","severity":1,"message":"624","line":68,"column":47,"nodeType":"625","messageId":"626","endLine":68,"endColumn":49},{"ruleId":"623","severity":1,"message":"624","line":70,"column":54,"nodeType":"625","messageId":"626","endLine":70,"endColumn":56},{"ruleId":"623","severity":1,"message":"624","line":72,"column":54,"nodeType":"625","messageId":"626","endLine":72,"endColumn":56},{"ruleId":"623","severity":1,"message":"624","line":112,"column":43,"nodeType":"625","messageId":"626","endLine":112,"endColumn":45},{"ruleId":"623","severity":1,"message":"624","line":112,"column":88,"nodeType":"625","messageId":"626","endLine":112,"endColumn":90},{"ruleId":"718","severity":1,"message":"719","line":220,"column":87,"nodeType":"720","endLine":220,"endColumn":94},{"ruleId":"623","severity":1,"message":"624","line":233,"column":126,"nodeType":"625","messageId":"626","endLine":233,"endColumn":128},{"ruleId":"721","severity":1,"message":"722","line":327,"column":5,"nodeType":"723","messageId":"724","endLine":327,"endColumn":60},{"ruleId":"608","severity":1,"message":"645","line":1,"column":9,"nodeType":"610","messageId":"611","endLine":1,"endColumn":15},{"ruleId":"608","severity":1,"message":"662","line":1,"column":17,"nodeType":"610","messageId":"611","endLine":1,"endColumn":26},{"ruleId":"608","severity":1,"message":"666","line":1,"column":28,"nodeType":"610","messageId":"611","endLine":1,"endColumn":33},{"ruleId":"608","severity":1,"message":"665","line":9,"column":8,"nodeType":"610","messageId":"611","endLine":9,"endColumn":14},{"ruleId":"623","severity":1,"message":"624","line":28,"column":47,"nodeType":"625","messageId":"626","endLine":28,"endColumn":49},{"ruleId":"623","severity":1,"message":"624","line":28,"column":92,"nodeType":"625","messageId":"626","endLine":28,"endColumn":94},{"ruleId":"608","severity":1,"message":"665","line":11,"column":8,"nodeType":"610","messageId":"611","endLine":11,"endColumn":14},{"ruleId":"608","severity":1,"message":"725","line":20,"column":12,"nodeType":"610","messageId":"611","endLine":20,"endColumn":17},{"ruleId":"608","severity":1,"message":"726","line":20,"column":19,"nodeType":"610","messageId":"611","endLine":20,"endColumn":27},{"ruleId":"617","severity":1,"message":"727","line":45,"column":8,"nodeType":"619","endLine":45,"endColumn":18,"suggestions":"728"},{"ruleId":"608","severity":1,"message":"729","line":62,"column":15,"nodeType":"610","messageId":"611","endLine":62,"endColumn":23},{"ruleId":"608","severity":1,"message":"730","line":75,"column":11,"nodeType":"610","messageId":"611","endLine":75,"endColumn":24},{"ruleId":"608","severity":1,"message":"729","line":80,"column":15,"nodeType":"610","messageId":"611","endLine":80,"endColumn":23},{"ruleId":"608","severity":1,"message":"731","line":93,"column":11,"nodeType":"610","messageId":"611","endLine":93,"endColumn":29},{"ruleId":"608","severity":1,"message":"729","line":98,"column":15,"nodeType":"610","messageId":"611","endLine":98,"endColumn":23},{"ruleId":"732","severity":1,"message":"733","line":114,"column":12,"nodeType":"734","messageId":"735","endLine":114,"endColumn":29},{"ruleId":"623","severity":1,"message":"736","line":127,"column":37,"nodeType":"625","messageId":"626","endLine":127,"endColumn":39},{"ruleId":"623","severity":1,"message":"624","line":140,"column":34,"nodeType":"625","messageId":"626","endLine":140,"endColumn":36},{"ruleId":"623","severity":1,"message":"624","line":155,"column":55,"nodeType":"625","messageId":"626","endLine":155,"endColumn":57},{"ruleId":"623","severity":1,"message":"624","line":264,"column":92,"nodeType":"625","messageId":"626","endLine":264,"endColumn":94},{"ruleId":"639","severity":1,"message":"640","line":355,"column":31,"nodeType":"641","endLine":356,"endColumn":28},{"ruleId":"608","severity":1,"message":"665","line":5,"column":8,"nodeType":"610","messageId":"611","endLine":5,"endColumn":14},{"ruleId":"608","severity":1,"message":"646","line":13,"column":9,"nodeType":"610","messageId":"611","endLine":13,"endColumn":20},{"ruleId":"608","severity":1,"message":"645","line":13,"column":22,"nodeType":"610","messageId":"611","endLine":13,"endColumn":28},{"ruleId":"617","severity":1,"message":"647","line":32,"column":8,"nodeType":"619","endLine":32,"endColumn":30,"suggestions":"737"},{"ruleId":"617","severity":1,"message":"647","line":36,"column":8,"nodeType":"619","endLine":36,"endColumn":10,"suggestions":"738"},{"ruleId":"617","severity":1,"message":"675","line":42,"column":8,"nodeType":"619","endLine":42,"endColumn":19,"suggestions":"739"},{"ruleId":"623","severity":1,"message":"624","line":63,"column":57,"nodeType":"625","messageId":"626","endLine":63,"endColumn":59},{"ruleId":"608","severity":1,"message":"740","line":23,"column":11,"nodeType":"610","messageId":"611","endLine":23,"endColumn":18},{"ruleId":"608","severity":1,"message":"741","line":11,"column":18,"nodeType":"610","messageId":"611","endLine":11,"endColumn":23},{"ruleId":"608","severity":1,"message":"742","line":11,"column":25,"nodeType":"610","messageId":"611","endLine":11,"endColumn":30},{"ruleId":"608","severity":1,"message":"743","line":11,"column":32,"nodeType":"610","messageId":"611","endLine":11,"endColumn":41},{"ruleId":"608","severity":1,"message":"662","line":11,"column":51,"nodeType":"610","messageId":"611","endLine":11,"endColumn":60},{"ruleId":"608","severity":1,"message":"712","line":14,"column":8,"nodeType":"610","messageId":"611","endLine":14,"endColumn":20},{"ruleId":"617","severity":1,"message":"621","line":59,"column":8,"nodeType":"619","endLine":59,"endColumn":17,"suggestions":"744"},{"ruleId":"608","severity":1,"message":"745","line":83,"column":11,"nodeType":"610","messageId":"611","endLine":83,"endColumn":22},{"ruleId":"608","severity":1,"message":"729","line":92,"column":15,"nodeType":"610","messageId":"611","endLine":92,"endColumn":23},{"ruleId":"608","severity":1,"message":"746","line":111,"column":11,"nodeType":"610","messageId":"611","endLine":111,"endColumn":22},{"ruleId":"623","severity":1,"message":"624","line":134,"column":48,"nodeType":"625","messageId":"626","endLine":134,"endColumn":50},{"ruleId":"623","severity":1,"message":"736","line":234,"column":114,"nodeType":"625","messageId":"626","endLine":234,"endColumn":116},{"ruleId":"623","severity":1,"message":"624","line":273,"column":128,"nodeType":"625","messageId":"626","endLine":273,"endColumn":130},{"ruleId":"608","severity":1,"message":"657","line":1,"column":27,"nodeType":"610","messageId":"611","endLine":1,"endColumn":35},{"ruleId":"608","severity":1,"message":"747","line":3,"column":9,"nodeType":"610","messageId":"611","endLine":3,"endColumn":30},{"ruleId":"608","severity":1,"message":"660","line":11,"column":9,"nodeType":"610","messageId":"611","endLine":11,"endColumn":18},{"ruleId":"608","severity":1,"message":"748","line":12,"column":9,"nodeType":"610","messageId":"611","endLine":12,"endColumn":25},{"ruleId":"617","severity":1,"message":"647","line":54,"column":8,"nodeType":"619","endLine":54,"endColumn":10,"suggestions":"749"},{"ruleId":"617","severity":1,"message":"647","line":60,"column":8,"nodeType":"619","endLine":60,"endColumn":19,"suggestions":"750"},{"ruleId":"623","severity":1,"message":"624","line":65,"column":48,"nodeType":"625","messageId":"626","endLine":65,"endColumn":50},{"ruleId":"623","severity":1,"message":"624","line":18,"column":48,"nodeType":"625","messageId":"626","endLine":18,"endColumn":50},{"ruleId":"608","severity":1,"message":"751","line":4,"column":5,"nodeType":"610","messageId":"611","endLine":4,"endColumn":18},{"ruleId":"608","severity":1,"message":"752","line":5,"column":5,"nodeType":"610","messageId":"611","endLine":5,"endColumn":26},{"ruleId":"608","severity":1,"message":"753","line":6,"column":5,"nodeType":"610","messageId":"611","endLine":6,"endColumn":26},{"ruleId":"608","severity":1,"message":"754","line":1,"column":16,"nodeType":"610","messageId":"611","endLine":1,"endColumn":25},{"ruleId":"608","severity":1,"message":"657","line":1,"column":27,"nodeType":"610","messageId":"611","endLine":1,"endColumn":35},{"ruleId":"608","severity":1,"message":"658","line":2,"column":9,"nodeType":"610","messageId":"611","endLine":2,"endColumn":17},{"ruleId":"608","severity":1,"message":"659","line":2,"column":19,"nodeType":"610","messageId":"611","endLine":2,"endColumn":29},{"ruleId":"608","severity":1,"message":"660","line":2,"column":31,"nodeType":"610","messageId":"611","endLine":2,"endColumn":40},{"ruleId":"608","severity":1,"message":"755","line":11,"column":9,"nodeType":"610","messageId":"611","endLine":11,"endColumn":16},{"ruleId":"608","severity":1,"message":"662","line":11,"column":51,"nodeType":"610","messageId":"611","endLine":11,"endColumn":60},{"ruleId":"623","severity":1,"message":"624","line":22,"column":48,"nodeType":"625","messageId":"626","endLine":22,"endColumn":50},{"ruleId":"608","severity":1,"message":"742","line":9,"column":37,"nodeType":"610","messageId":"611","endLine":9,"endColumn":42},{"ruleId":"617","severity":1,"message":"756","line":42,"column":8,"nodeType":"610","endLine":42,"endColumn":12},{"ruleId":"617","severity":1,"message":"757","line":42,"column":8,"nodeType":"610","endLine":42,"endColumn":12,"suggestions":"758"},{"ruleId":"623","severity":1,"message":"624","line":87,"column":48,"nodeType":"625","messageId":"626","endLine":87,"endColumn":50},{"ruleId":"759","severity":1,"message":"760","line":292,"column":19,"nodeType":"761","messageId":"762","endLine":292,"endColumn":46,"fix":"763"},{"ruleId":"608","severity":1,"message":"658","line":2,"column":15,"nodeType":"610","messageId":"611","endLine":2,"endColumn":23},{"ruleId":"608","severity":1,"message":"659","line":2,"column":25,"nodeType":"610","messageId":"611","endLine":2,"endColumn":35},{"ruleId":"608","severity":1,"message":"660","line":2,"column":37,"nodeType":"610","messageId":"611","endLine":2,"endColumn":46},{"ruleId":"608","severity":1,"message":"713","line":10,"column":8,"nodeType":"610","messageId":"611","endLine":10,"endColumn":17},{"ruleId":"617","severity":1,"message":"647","line":50,"column":8,"nodeType":"619","endLine":50,"endColumn":27,"suggestions":"764"},{"ruleId":"617","severity":1,"message":"647","line":56,"column":8,"nodeType":"619","endLine":56,"endColumn":19,"suggestions":"765"},{"ruleId":"623","severity":1,"message":"624","line":61,"column":47,"nodeType":"625","messageId":"626","endLine":61,"endColumn":49},{"ruleId":"608","severity":1,"message":"645","line":12,"column":9,"nodeType":"610","messageId":"611","endLine":12,"endColumn":15},{"ruleId":"608","severity":1,"message":"646","line":12,"column":17,"nodeType":"610","messageId":"611","endLine":12,"endColumn":28},{"ruleId":"617","severity":1,"message":"647","line":28,"column":8,"nodeType":"619","endLine":28,"endColumn":30,"suggestions":"766"},{"ruleId":"617","severity":1,"message":"647","line":32,"column":8,"nodeType":"619","endLine":32,"endColumn":10,"suggestions":"767"},{"ruleId":"617","severity":1,"message":"650","line":38,"column":8,"nodeType":"619","endLine":38,"endColumn":17,"suggestions":"768"},{"ruleId":"617","severity":1,"message":"652","line":50,"column":25,"nodeType":"619","endLine":50,"endColumn":68,"suggestions":"769"},{"ruleId":"654","severity":1,"message":"655","line":78,"column":61,"nodeType":"638","endLine":78,"endColumn":105},{"ruleId":"623","severity":1,"message":"624","line":15,"column":56,"nodeType":"625","messageId":"626","endLine":15,"endColumn":58},{"ruleId":"623","severity":1,"message":"624","line":21,"column":59,"nodeType":"625","messageId":"626","endLine":21,"endColumn":61},{"ruleId":"654","severity":1,"message":"689","line":21,"column":17,"nodeType":"638","endLine":21,"endColumn":63},{"ruleId":"654","severity":1,"message":"689","line":12,"column":17,"nodeType":"638","endLine":12,"endColumn":63},"no-native-reassign",["770"],"no-negated-in-lhs",["771"],"no-unused-vars","'HomeMaster' is defined but never used.","Identifier","unusedVar","'DetailCustomer' is defined but never used.","'ReportDetail' is defined but never used.","'faCheck' is defined but never used.","'faCross' is defined but never used.","'faSave' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["772"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["773"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FontAwesomeIcon' is defined but never used.","'faHandshake' is defined but never used.","'faIdCard' is defined but never used.","'faMailBulk' is defined but never used.","'faUser' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["774"],["775"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'HeaderMaster' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'onReload'. Either include it or remove the dependency array.",["776"],["777"],"React Hook useEffect has a missing dependency: 'report'. Either include it or remove the dependency array.",["778"],"React Hook useEffect has a missing dependency: 'reports'. Either include it or remove the dependency array.",["779"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'id' is assigned a value but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'faPlus' is defined but never used.","'Container' is defined but never used.","'Form' is defined but never used.","'TransactionRow' is defined but never used.","'SignIn' is defined but never used.","'Table' is defined but never used.",["780"],["781"],"React Hook useEffect has a missing dependency: 'transaction'. Either include it or remove the dependency array.",["782"],"'Row' is defined but never used.","'Col' is defined but never used.",["783"],["784"],"React Hook useEffect has a missing dependency: 'customer'. Either include it or remove the dependency array.",["785"],"'findAllCustomerByIdReducer' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ListCustomer' is defined but never used.","'TransactionList' is defined but never used.","'faFolderPlus' is defined but never used.","'faLock' is defined but never used.","'faUserCog' is defined but never used.","'faUserPlus' is defined but never used.","'faUsers' is defined but never used.","'faCheckDouble' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faCheckCircle' is defined but never used.","'faInfoCircle' is defined but never used.","'faPencilAlt' is defined but never used.","'faTrash' is defined but never used.","'toggle' is assigned a value but never used.","'handleOnclick' is assigned a value but never used.","'FIND_ALL_CUSTOMER' is defined but never used.","'FIND_CUSTOMER_BY_SUBMITTER_FAILURE' is defined but never used.","'FIND_CUSTOMER_BY_SUBMITTER_SUCCESS' is defined but never used.","'FIND_NEEDTYPE_BY_ID' is defined but never used.","'FIND_NEEDTYPE_BY_ID_FAILURE' is defined but never used.","'FIND_NEEDTYPE_BY_ID_SUCCESS' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID_SUCCESS' is defined but never used.","'UPDATE_NEEDTYPE' is defined but never used.","'UPDATE_NEEDTYPE_SUCCESS' is defined but never used.","'FIND_ALL_APPROVAL_SUCCESS' is defined but never used.","'FIND_TRANSACTION_BY_STAFF' is defined but never used.","'UPDATE_CUSTOMER' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID_FAILURE' is defined but never used.","'FaFontAwesome' is defined but never used.","'faArrowLeft' is defined but never used.","'DropdownList' is defined but never used.","'ReasonRow' is defined but never used.","'handleCustomer' is assigned a value but never used.","'handleNeed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["786"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["787"],"'response' is assigned a value but never used.","'uploadIdPhoto' is assigned a value but never used.","'uploadProfilePhoto' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Expected '!==' and instead saw '!='.",["788"],["789"],["790"],"'history' is assigned a value but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.",["791"],"'handlePhoto' is assigned a value but never used.","'handleRoles' is assigned a value but never used.","'findAccountByIdAction' is defined but never used.","'PaginationButton' is defined but never used.",["792"],["793"],"'SAVE_CUSTOMER' is defined but never used.","'SAVE_CUSTOMER_FAILURE' is defined but never used.","'SAVE_CUSTOMER_SUCCESS' is defined but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array. If 'setData' needs the current value of 'role', you can also switch to useReducer instead of useState and read 'role' in the reducer.",["794"],"no-whitespace-before-property","Unexpected whitespace before property data.","MemberExpression","unexpectedWhitespace",{"range":"795","text":"796"},["797"],["798"],["799"],["800"],["801"],["802"],"no-global-assign","no-unsafe-negation",{"desc":"803","fix":"804"},{"desc":"805","fix":"806"},{"desc":"807","fix":"808"},{"desc":"807","fix":"809"},{"desc":"810","fix":"811"},{"desc":"812","fix":"813"},{"desc":"814","fix":"815"},{"desc":"816","fix":"817"},{"desc":"810","fix":"818"},{"desc":"812","fix":"819"},{"desc":"820","fix":"821"},{"desc":"810","fix":"822"},{"desc":"812","fix":"823"},{"desc":"824","fix":"825"},{"desc":"826","fix":"827"},{"desc":"828","fix":"829"},{"desc":"810","fix":"830"},{"desc":"812","fix":"831"},{"desc":"824","fix":"832"},{"desc":"833","fix":"834"},{"desc":"812","fix":"835"},{"desc":"836","fix":"837"},{"desc":"838","fix":"839"},[19030,19032],".",{"desc":"840","fix":"841"},{"desc":"836","fix":"842"},{"desc":"810","fix":"843"},{"desc":"812","fix":"844"},{"desc":"814","fix":"845"},{"desc":"816","fix":"846"},"Update the dependencies array to be: [history, savedApprove]",{"range":"847","text":"848"},"Update the dependencies array to be: [id, transaction, transactionSubmitter]",{"range":"849","text":"850"},"Update the dependencies array to be: [findCustomerByIdAction, id]",{"range":"851","text":"852"},{"range":"853","text":"852"},"Update the dependencies array to be: [onReload, pageParam, sizeParam]",{"range":"854","text":"855"},"Update the dependencies array to be: [onReload]",{"range":"856","text":"857"},"Update the dependencies array to be: [report, reports]",{"range":"858","text":"859"},"Update the dependencies array to be: [findAllReportAction, pageParam, reports, sizeParam]",{"range":"860","text":"861"},{"range":"862","text":"855"},{"range":"863","text":"857"},"Update the dependencies array to be: [transaction, transactions]",{"range":"864","text":"865"},{"range":"866","text":"855"},{"range":"867","text":"857"},"Update the dependencies array to be: [customer, customers]",{"range":"868","text":"869"},"Update the dependencies array to be: [data, findCustomerByIdAction, id]",{"range":"870","text":"871"},"Update the dependencies array to be: [customer, data.id, findCustomerByIdAction, id]",{"range":"872","text":"873"},{"range":"874","text":"855"},{"range":"875","text":"857"},{"range":"876","text":"869"},"Update the dependencies array to be: [account, id]",{"range":"877","text":"878"},{"range":"879","text":"857"},"Update the dependencies array to be: [isRemoved, onReload]",{"range":"880","text":"881"},"Update the dependencies array to be: [id, role]",{"range":"882","text":"883"},"Update the dependencies array to be: [findAllRoleAction, onReload]",{"range":"884","text":"885"},{"range":"886","text":"881"},{"range":"887","text":"855"},{"range":"888","text":"857"},{"range":"889","text":"859"},{"range":"890","text":"861"},[2598,2612],"[history, savedApprove]",[2961,2996],"[id, transaction, transactionSubmitter]",[800,824],"[findCustomerByIdAction, id]",[920,944],[1007,1029],"[onReload, pageParam, sizeParam]",[1084,1086],"[onReload]",[1186,1195],"[report, reports]",[1472,1515],"[findAllReportAction, pageParam, reports, sizeParam]",[1237,1259],[1352,1354],[1469,1483],"[transaction, transactions]",[1197,1219],[1274,1276],[1382,1393],"[customer, customers]",[2085,2087],"[data, findCustomerByIdAction, id]",[1776,1786],"[customer, data.id, findCustomerByIdAction, id]",[1208,1230],[1285,1287],[1394,1405],[1950,1959],"[account, id]",[1680,1682],[1777,1788],"[isRemoved, onReload]",[1538,1542],"[id, role]",[1520,1539],"[findAllRoleAction, onReload]",[1634,1645],[1037,1059],[1114,1116],[1216,1225],[1502,1545]]